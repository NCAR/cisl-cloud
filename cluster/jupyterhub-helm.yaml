# With a Kubernetes cluster available and HELM installed, this HELM values
# file will install JupyterHub in the Kubernetes cluster. It is also assumed
# that you have helm and kubectl installed and configured on your workstation.
# This HELM values file will require modifications which are found and 
# described by searching for 'MODS'
# Use this file as a values.yaml reference when installing the zero2jupyterhub helm chart
# following the documentation : https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html#install-jupyterhub
jupyterhub:
    hub:
        config:
            JupyterHub:
                # <MODS> You will need to configure your authentication below. Below is currently
                # a template for Github auth and you need to fill out client_id, client_secret
                # and adjust the oauth_callback_url. This info can be generated within Developer settings
                # in Github via OAuth Apps using that oauth_callback_url you define.
                # Here is a reference to other auth ways:
                # https://jupyterhub.readthedocs.io/en/stable/tutorial/getting-started/authenticators-users-basics.html
                # </MODS>
                authenticator_class: github
            GitHubOAuthenticator:
                client_id: ENC[AES256_GCM,data:I1qfz+A0w5W7A3DjdngcvI56Sz4=,iv:CrygJdnNDRijY9lpX2dbngzZYRYthHnsbxfGhdYBWkk=,tag:jn5U8hAHYnQ4jdhyBuj9GQ==,type:str]
                client_secret: ENC[AES256_GCM,data:xYNWhRUBkFOsRfYYVPzMmXRk/tbHQnx/4obW+ZL0FSZO9veBC5Z/iA==,iv:sRDPTisDFiR4C/dzV9+6lgHDABVhpGQwHspHTTknygw=,tag:ifa2VG4ZjtqKv2JIQfLe4Q==,type:str]
                oauth_callback_url: ENC[AES256_GCM,data:ke+/EtvkzddwdCxwHoMXkN5is6IYgxYcAPSLoA9ChS5juUwostyIUOpPQsmIzfA=,iv:WLVk6e0DLPv2G5Eu/fqmR8MRQ76UfnIrTwDATc6Elk8=,tag:9Ku0y1sZA4/mpy/h0miwtQ==,type:str]
                allowed_organizations:
                    - ENC[AES256_GCM,data:doGonyXd2wG4y7SDH1vpQqi1Hrcl,iv:PODrNUAZKe6t8JTT5eBRkuNOkFTnqncLHIAh1cdgKqM=,tag:q9oDwj+3OM0ETXzie5RY0A==,type:str]
                scope:
                    - read:org
            Authenticator:
                # <MODS> adjust the admin_users if needed. These use Github usernames </MODS>
                admin_users:
                    - ENC[AES256_GCM,data:4F4KlJLeVNEbnM17r+SUHz0mY5nBO23Gc/fqVw7TJg==,iv:9N/BZFXcrRDtyRSK3N0oxCiRgJUJ5P5IOJ66Rc9SNXY=,tag:9YWR0FWLkcZ8kyICC2arXQ==,type:comment]
                    - ENC[AES256_GCM,data:6U0zcPMgm5jzjg==,iv:9SmP0JBOfyNFTna6MbV4ADbS7eTDujN+ICvotG/88VU=,tag:ooQjJ+x/0JmbJzHtAHIWUA==,type:str]
                    - ENC[AES256_GCM,data:n0PpaJfsGIpAFlsmg57qg0tPsOLDnFuEU1KItTUG2KSJRUIF,iv:n2uB2I37lw1ollkrIAOmgEkE+9eATFr+gaZvDhbbB8U=,tag:83dNM2w/PDYYHlni7uzl9g==,type:comment]
                    - ENC[AES256_GCM,data:SGXNfI00jje9nt8y,iv:ESP8GkQu+ItxvAncPUP+ZiVDRXSpswjJ4a0darbfock=,tag:PDe2/aafGxJsgwwBDIgjmA==,type:str]
                    - ENC[AES256_GCM,data:43J3WXOOGWK7AWgn9F3QlrZdfcCr/AGuuFC8ApCknGpAmwpUkj9hug==,iv:UQhRXwyz+TGUD3GdqNrg1UwUxEKPX1CBNQN5f7Bm+So=,tag:LMw6VG6gsjM38t6eIHjFGg==,type:comment]
                    - ENC[AES256_GCM,data:xHLEna/LV9ox,iv:64N3EGn4OU9DZ8A7a5Z1oi4TT1nJQ8PRo7GkyCFxozU=,tag:UtNB3E93+EW7sm0U7IWmHQ==,type:str]
                    - ENC[AES256_GCM,data:18n/Wl9tZE9uqMdxr8wCrkA6I9C+rMrgmjxH2Qb1pJRCGg==,iv:nZxBeeRUnMmjZqmHcpm+NfMvoF01l4pgdeU+6rcyHNE=,tag:0z2c408amKsnOaLsIW40fQ==,type:comment]
                    - ENC[AES256_GCM,data:R6CY5OIPdn5ceog0axE=,iv:EcQggWUvQLSrRZjtoxvo8g5U/Fbeqe1jMv7yADiyRGk=,tag:YLF0uE7GL/v9yRrbJIF1Qg==,type:str]
    proxy:
        # <MODS> Make sure you fill in a secretToken. Run: 'openssl rand -hex 32'
        # on your local workstation to get that value. </MODS>
        secretToken: ENC[AES256_GCM,data:gbG6vRr6w5hvLL899OTv20zsyQKlFdVYRczktNfjCAKmrSNVqdB/3CHWK4ABP4dtmk47iToGK29d2Vtfzt7qmg==,iv:Qs1nLilrfyk7Cm343luqwoHNe1YlQ/6CzBMQguRNooU=,tag:eDA19F+hVUzU9d/6PYhyxg==,type:str]
        service:
            type: ClusterIP
    singleuser:
        extraEnv:
            # About DASK_ prefixed variables we set:
            #
            # 1. k8s native variable expansion is applied with $(MY_ENV) syntax. The
            #    order variables are defined matters though and we are under the
            #    mercy of how KubeSpawner renders our passed dictionaries.
            #
            # 2. Dask loads local YAML config.
            #
            # 3. Dask loads environment variables prefixed DASK_.
            #    - DASK_ is stripped
            #    - Capitalization is ignored
            #    - Double underscore means a nested configuration
            #    - `ast.literal_eval` is used to parse values
            #
            # 4. dask-gateway and dask-distributed looks at its config and expands
            #    expressions in {} again, sometimes only with the environment
            #    variables as context but sometimes also with additional variables.
            #
            # References:
            # - K8s expansion:     https://kubernetes.io/docs/tasks/inject-data-application/define-interdependent-environment-variables/
            # - KubeSpawner issue: https://github.com/jupyterhub/kubespawner/issues/491
            # - Dask config:       https://docs.dask.org/en/latest/configuration.html
            # - Exploration issue: https://github.com/2i2c-org/infrastructure/issues/442
            #
            # DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE makes the default worker image
            # match the singleuser image.
            DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: $(JUPYTER_IMAGE_SPEC)
            # DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT makes some environment
            # variables be copied over to the worker nodes from the user nodes.
            #DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT: '$"SCRATCH_BUCKET": "$(SCRATCH_BUCKET)", "PANGEO_SCRATCH": "$(PANGEO_SCRATCH)"'
            # DASK_DISTRIBUTED__DASHBOARD__LINK makes the suggested link to the
            # dashboard account for the /user/<username>/<server-name> prefix in the path.
            # JUPYTERHUB_SERVICE_PREFIX has leading and trailing slashes as appropriate
            DASK_DISTRIBUTED__DASHBOARD__LINK: $(JUPYTERHUB_SERVICE_PREFIX)proxy/{port}/status
        storage:
            extraVolumes:
                - name: ENC[AES256_GCM,data:VQKZ2NGnIIa/3g==,iv:jQOYv9jZcoqm5n9zCBljcDkXfSsndo6QsEsjn1hnGFU=,tag:3zkC265Qp5OK/HfX1DBUJQ==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:klr+LMAFTJ5GT79cPTeD+kEosOAQGQ==,iv:UvgJjdWIXw+DBJYPXJ7Ec2t6mX1jZnbhly0l1+5nlvM=,tag:1kqSwAjwV+pLNNjs4I0LYA==,type:str]
                    path: ENC[AES256_GCM,data:SM3DA8QKHH62tVYvQ/RFYIWrbQFuGVN9rc150tHP7g==,iv:d8KccHXdvBRRDjzu1qKGdKszdO2MtgFun90XUM+jY84=,tag:q+ElS6i5Yx+iE9i/nSvbOg==,type:str]
                - name: ENC[AES256_GCM,data:vSEsXRG8+Pkmue+4MaQOH8c=,iv:4PXT1/fuFqveCaoi1AcUTrbVkVn8tCy7gc3ynmKOnio=,tag:NF/AILnBPvD6uxVc02nw/w==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:Fyp6cG7B5HjZm1hnpJCq2p8=,iv:nVTxuyX700LDCRyMa+OcPwW+uiilz+SASjqGDrk5v7c=,tag:a28BH0/jX/RMDHUXy5cMRg==,type:str]
                    path: ENC[AES256_GCM,data:UXJVPw4SzVvvJKaBkAZBa00/NeZb,iv:e+zgHL2J6hqccWXsew4LPpszYMXSLuUIY+eFSAgVmpk=,tag:h/Cnj3bpKdjWt6roOMj4iQ==,type:str]
                - name: ENC[AES256_GCM,data:5LLL606KL4w=,iv:4KUHxfZO06x01ilN1wKiD+mQgBRCbtucfXqCAYY+k88=,tag:6a5086iC7S2P1F7AsJb5yA==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:24BwvgwgNtyYQXBBiMsPzoI=,iv:sN/tJv2UMqfBfvQosn60aoDc1nLq3WhMzR3z4/Piy2c=,tag:FWD4vaiC0zvfeXnav0IYaw==,type:str]
                    path: ENC[AES256_GCM,data:MN2a7ry1Ki01JpM=,iv:imBpEVXrZMlubqrNxIWOVhfOeaEvBeRwZQEdx0pETGA=,tag:+gsRKKY7sNr6VpFaPiVe/w==,type:str]
            extraVolumeMounts:
                - name: ENC[AES256_GCM,data:b0cV1ZPswbK1QA==,iv:puVMRbfLOemxal7Cz1s3q/yn21wcP3qRQZ7Docrf1DY=,tag:zOmTbJYGjyH7JQPYdkz+HQ==,type:str]
                  mountPath: ENC[AES256_GCM,data:hVUAZqcBvq/MpSoKOjAegIBg5A==,iv:3dmb68S/ZBzYK/cUnT5olL54bShnerFzh+4a8trCeCI=,tag:GVhGp3aRQ17lzdZCEVZBdg==,type:str]
                  readOnly: ENC[AES256_GCM,data:RAH76Q==,iv:F1LHIqRGLVBMyXCwAcQEr9PJi9XQYlmIb48+2g5mp8Y=,tag:28J/RZKnzvZP4EkKoU0xlQ==,type:bool]
                - name: ENC[AES256_GCM,data:W2Mu1x83bOZ/Eaiyd1+QFwU=,iv:zF516T0qO5xRrXm82ygs3doWooeKQYdXh6yCSrEh2kw=,tag:2SRRbwY8JK0fdv/9Kahe5w==,type:str]
                  mountPath: ENC[AES256_GCM,data:kRM05CZF5J24uPTKOkfP6Yaa,iv:N+CWsvX/WPjUGQ0WCGgHSKjGc9cxwk3v8FA1ac+y+mo=,tag:PEFAajLnyQyHxthulT9R5g==,type:str]
                  readOnly: ENC[AES256_GCM,data:O6nbVg==,iv:ARQvI5p8TyTnBmu3L9Hk+/DDax6XQrBHSdN+Sf1u8dI=,tag:264XmZRylbG9SudysP/RIw==,type:bool]
                - name: ENC[AES256_GCM,data:nMjfl0IKbm0=,iv:DCCRnYFAfza9IZTyYfMYEEp+HbzEc167VZrFmWXqNnk=,tag:dI//pQRKwyob0TAcBxS2mQ==,type:str]
                  mountPath: ENC[AES256_GCM,data:C5hmeJ5yE7SFKUT5zn/e,iv:q/h/ojhJ12FPw1M40d/UbVma3ipbvCrCv22S5YUOH4E=,tag:H9BceCsVe6FaPtZcj9DNPg==,type:str]
                  readOnly: ENC[AES256_GCM,data:bSvBtQ==,iv:cOdiajzZP9i35jDsLzcgSvOcmcokpo1j/tAFyXvNKEI=,tag:VzDSeAGp/RkljAOPdVMBsg==,type:bool]
        image:
            # image choice preliminary and is expected to be setup via
            # https://ncar-cisl.2i2c.cloud/services/configurator/ by the community
            #
            # pangeo/pangeo-notebook is maintained at: https://github.com/pangeo-data/pangeo-docker-images
            name: pangeo/pangeo-notebook
            tag: 2023.05.18
        profileList:
            # NOTE: About node sharing
            #
            #       CPU/Memory requests/limits are actively considered still. This
            #       profile list is setup to involve node sharing as considered in
            #       https://github.com/2i2c-org/infrastructure/issues/2121.
            #
            #       - Memory requests are different from the description, based on:
            #         whats found to remain allocate in k8s, subtracting 1GiB
            #         overhead for misc system pods, and transitioning from GB in
            #         description to GiB in mem_guarantee.
            #       - CPU requests are lower than the description, with a factor of
            #         10%.
            #
            - display_name: Pangeo Notebook
              description: Start a container with the chosen specifications on a node of this type
              slug: pangeo
              default: true
              profile_options:
                requests:
                    # NOTE: Node share choices are in active development, see comment
                    #       next to profileList: above.
                    display_name: Container Selection
                    choices:
                        mem_1:
                            default: true
                            display_name: ~1 GB, ~0.125 CPU
                            kubespawner_override:
                                mem_guarantee: 0.904G
                                cpu_guarantee: 0.013
                        mem_4:
                            display_name: ~4 GB, ~0.5 CPU
                            kubespawner_override:
                                mem_guarantee: 1.809G
                                cpu_guarantee: 0.025
                        mem_16:
                            display_name: ~16 GB, ~2.0 CPU
                            kubespawner_override:
                                mem_guarantee: 14.469G
                                cpu_guarantee: 0.5
              kubespawner_override:
                cpu_limit: null
                mem_limit: null
                #        node_selector:
                #          node.kubernetes.io/instance-type: r5.xlarge
            - display_name: NVIDIA Tensor A10
              slug: gpu
              description: Start a container on a dedicated node with a GPU
              profile_options:
                image:
                    display_name: Image
                    choices:
                        tensorflow:
                            display_name: Pangeo Tensorflow ML Notebook
                            slug: tensorflow
                            kubespawner_override:
                                image: pangeo/ml-notebook:2023.05.18
                        pytorch:
                            display_name: Pangeo PyTorch ML Notebook
                            default: true
                            slug: pytorch
                            kubespawner_override:
                                image: pangeo/pytorch-notebook:2023.05.18
              kubespawner_override:
                mem_limit: null
                mem_guarantee: 14G
                environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility
                    ##        node_selector:
                    ##          node.kubernetes.io/instance-type: g4dn.xlarge
                extra_pod_config:
                    runtimeClassName: nvidia
                extra_resource_limits:
                    nvidia.com/gpu: "1"
            - display_name: Test NCAR Custom
              description: 6 GB of memory; up to 4 vCPUS
              profile_options:
                image:
                    display_name: Latest
                    choices:
                        tensorflow:
                            display_name: NCAR Latest Test
                            slug: ncar
                            kubespawner_override:
                                image: cislcloudpilot/cisl-cloud-base:2023-09-12
              kubespawner_override:
                mem_guarantee: 2G
                mem_limit: 6G
                cpu_guarantee: 1
                cpu_limit: 4
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 600m
            nginx.org/client-max-body-size: 10m
            nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/secure-backends: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/websocket-services: proxy-public
            nginx.org/websocket-services: proxy-public
            cert-manager.io/cluster-issuer: incommon
        ingressClassName: nginx
        # <MODS> Adjust the hosts entries in this next session.
        hosts:
            - ENC[AES256_GCM,data:ZJ2Z2NYFwdm6AEfoTO9xzmxH77U=,iv:jx33170yRDSH3Q1eC2fdszjErTqZ//3DSsER98mGO50=,tag:WQP4xtcyRpIcIwu5cRB5SA==,type:str]
        tls:
            - hosts:
                - ENC[AES256_GCM,data:a9Oeo7xvXm0zoqXJzIe4n6Q9q0c=,iv:WdB5ERMK+y/IE2PfKGUHJPVsX36BzsKAqWGJOPD2FR0=,tag:oubmo1E+jJCnbet/5aDADw==,type:str]
              secretName: ENC[AES256_GCM,data:9lQhH0jQ/MBAdSfozPtcgzvA4Q==,iv:ueyM7tN0/wvKqj+JXJ59FhZmtGATYacsPaE2bJ+xFKc=,tag:l2gdIkFmVi0bnz9wrZuh7Q==,type:str]
              # </MODS>
dask-gateway:
    # Enabling dask-gateway will install Dask Gateway as a dependency.
    enabled: true
    # Futher Dask Gateway configuration goes here
    # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
    gateway:
        backend:
            scheduler:
                extraPodConfig: null
                #          serviceAccountName: user-sa
                #          tolerations:
                #            # Let's put schedulers on notebook nodes, since they aren't ephemeral
                #            # dask can recover from dead workers, but not dead schedulers
                #            - key: "hub.jupyter.org/dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #            - key: "hub.jupyter.org_dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #          nodeSelector:
                #            k8s.dask.org/node-purpose: scheduler
                cores:
                    request: 0.01
                    limit: 1
                memory:
                    request: 128M
                    limit: 1G
            worker:
                extraContainerConfig:
                    securityContext:
                        runAsGroup: 1000
                        runAsUser: 1000
                extraPodConfig:
                    #          serviceAccountName: user-sa
                    securityContext:
                        fsGroup: 1000
        #          tolerations:
        #            - key: "k8s.dask.org/dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #            - key: "k8s.dask.org_dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #          nodeSelector:
        #            # Dask workers get their own pre-emptible pool
        #            k8s.dask.org/node-purpose: worker
        # TODO: figure out a replacement for userLimits.
        extraConfig:
            optionHandler: |
                from dask_gateway_server.options import Options, Integer, Float, String, Mapping
                import string

                # Escape a string to be dns-safe in the same way that KubeSpawner does it.
                # Reference https://github.com/jupyterhub/kubespawner/blob/616f72c4aee26c3d2127c6af6086ec50d6cda383/kubespawner/spawner.py#L1828-L1835
                # Adapted from https://github.com/minrk/escapism to avoid installing the package
                # in the dask-gateway api pod which would have been problematic.
                def escape_string_label_safe(to_escape):
                    safe_chars = set(string.ascii_lowercase + string.digits)
                    escape_char = "-"
                    chars = []
                    for c in to_escape:
                        if c in safe_chars:
                            chars.append(c)
                        else:
                            # escape one character
                            buf = []
                            # UTF-8 uses 1 to 4 bytes per character, depending on the Unicode symbol
                            # so we need to transform each byte to its hex value
                            for byte in c.encode("utf8"):
                                buf.append(escape_char)
                                # %X is the hex value of the byte
                                buf.append('%X' % byte)
                            escaped_hex_char = "".join(buf)
                            chars.append(escaped_hex_char)
                    return u''.join(chars)

                def cluster_options(user):
                    safe_username = escape_string_label_safe(user.name)
                    def option_handler(options):
                        if ":" not in options.image:
                            raise ValueError("When specifying an image you must also provide a tag")
                        scheduler_extra_pod_annotations = {
                            "hub.jupyter.org/username": safe_username,
                            "prometheus.io/scrape": "true",
                            "prometheus.io/port": "8787",
                        }
                        extra_labels = {
                            "hub.jupyter.org/username": safe_username,
                        }
                        return {
                            "worker_cores_limit": options.worker_cores,
                            "worker_cores": options.worker_cores,
                            "worker_memory": "%fG" % options.worker_memory,
                            "image": options.image,
                            "scheduler_extra_pod_annotations": scheduler_extra_pod_annotations,
                            "scheduler_extra_pod_labels": extra_labels,
                            "worker_extra_pod_labels": extra_labels,
                            "environment": options.environment,
                        }
                    return Options(
                        Integer("worker_cores", 4, min=1, label="Worker Cores"),
                        Float("worker_memory", 8, min=1, label="Worker Memory (GiB)"),
                        # The default image is set via DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE env variable
                        String("image", label="Image"),
                        Mapping("environment", {}, label="Environment Variables"),
                        handler=option_handler,
                    )
                c.Backend.cluster_options = cluster_options
            idle: |
                # timeout after 30 minutes of inactivity
                c.KubeClusterConfig.idle_timeout = 1800
        # Users connect to the Gateway through the JupyterHub service.
        prefix: /services/dask-gateway
        auth:
            # Use JupyterHub to authenticate with Dask Gateway
            type: jupyterhub
    traefik:
        #    nodeSelector:
        #      k8s.dask.org/node-purpose: core
        service:
            # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.
            type: ClusterIP
# A placeholder as global values that can be referenced from the same location
# of any chart should be possible to provide, but aren't necessarily provided or
# used.
#global: {}
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ucetgj7k3whaqf9nulacsqarur6nrgzuyt59apeptu5cphd6ksdsqpy5he
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBIOFNvSERpRCtTQ2FUL1FL
            bUFlVTZ0L3VCTEFpSExRVVNtN3JadEFLOG5ZCkpyakMrVUhLWWZ6ZFYxRGpCM1cx
            RFNYM1NtaEtCWmp4czBJS01uKzZWRXcKLS0tIDVodWhVL0w0dkhpWDhSOWhjZWpK
            WlNWMGJnTU94T0pzSmcrc3orMDFQU2sKrbWvg0zNhppndYqIpWF9/scbh7Y6io87
            rSvKOGora9inB3dyRVdIb4TrjJNPL/+sY9aqSvcvZSzL25OWjI+ADg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1dnkv8vy8xkl5afwuwl55ycpquy2uk7ypc5ad87sfug2zffp6jgkqwwzglr
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAzWkZmUU5tcjhocFByUDZr
            Zm5HckRETGFuanQyMFFYdHdkQkRMa1FUYUI0Cms1Wk10dTZDQnQ4OWFrZzJpWXBn
            dC80QXYrVWNVeUtxcGlBTmxnUVZURmMKLS0tIEZHdWpsZGpUT1dneVhFYXZmUnA2
            ZVcxV3p3R3FUZUFUSmJ1d1Z1SVhRK00K5iyPkLEgeMJ+ahZulfBcwO4nSZe0MNci
            inOAyAcVGX+hALC12Iq6OqdRFGrhwIeclGAhvnI1mgbo23wur8yt7A==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1wt75fkqsa2ngrhtmr7ws2ve8v9h2463hryj4jk4k7m5khxmc9pgqgqag8x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBrTzJ2OGpOSXFuall6VlV4
            ZW1DRmhjOGU0cjlGRGpRbU1OdjlYSVRjRVQ4CkNzdGt3bzRES0IzTXJLaXZBbkdj
            WUhvZFBNcEVwc2dBYlhxNlVIb2xCeE0KLS0tIG5oR0FuekpndDU4dlRMVDhMMWRh
            UE04MEdQNitQWE43YmIvV3ZGMkNrWk0KNGJfAmsv6lbcBG1mPZSh+/p/RNKhKTCy
            YQFdmqur1P3Q/cpSx/g86lWG2A0qSqT8f7f+C90KmV742fIqtHrcJA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1fqw4znyl0zjpw5ta7ll3auxpzg8dme578jgw43a0dtzjhwjn4qlstaez7c
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBoK2dOb3Z0Y1NDMnJEeERu
            dVB6RkZ6WE1XcUtLM3JWYmpHY0hKOXc3K1JnClhDM0FOeER0VGJEVExDVGx6VlhZ
            K1BHeTYwazRISDBUdEFiNlplTXB6RkUKLS0tIDRKSHBUZS95MWlaYUJOb1ljZXIw
            TTVsSXh6bElvR1pUbzFWV1V5SDFTaUEKAtrkt6ZaMZOjA3ZpeIUdOlApdnaPb31w
            9QY/Jy6+JsV46A2993RiBZ2XT6N2YxAQT1HFx0zBQuPfeLTRK+V76w==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1m2ay7zlek6d4uctt09vsw5l8gpydjlvu9xemv8pqh97urdmhhyrsh9qe86
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBBZmo2aXlOazhjN3piZnhZ
            by93ams3NHEvRmNkM20vR0tPUk5BUE05cFZjCkpoRUpxaitlSjBDOVNzRTBiSWJr
            QWxmZkV0ZkhZc3JDenB0YUtCTGpVdWcKLS0tIHJPK1MvRGR1ZmFpRlVSR0JhVG81
            QmdKa1hiMWR0MmVxVURzOS9LRFNaa1kK14x56zIxKOwNjF2uOEoT/u4Oh8NhEVDX
            CduESvdNzR7n8K0/B99yo1AhIO/JYZjSIV+IzCKVa5FQ0/YZIQE0/g==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2023-10-23T13:22:11Z"
    mac: ENC[AES256_GCM,data:YxNpLxf1GYidt1MJawtDKSilGrdBucNg1gQ4Mymi8sKQ/Yk1IwKKBp0IsKFl/a6P2QBu16TZDq8NolWku/QRaeZezoKTTwZX+pifrU8J9Uj0w8m4EuoOWnTqjo2x2ZE/gfzCpWi+AeTRtvfHZd+8ZCavHWqxmjPmkSvG1dplSRs=,iv:n6YkUdZvp3OBearAo5doCIP1ymI9SdFbFvh7NiMi0+w=,tag:+ENEYkwDIDudxFjavyPT2g==,type:str]
    pgp: []
    encrypted_regex: ^(client_id|client_secret|secretToken|admin_users|oauth_callback_url|allowed_organizations|extraVolumes|extraVolumeMounts|hosts|secretName)$
    version: 3.7.3
