# With a Kubernetes cluster available and HELM installed, this HELM values
# file will install JupyterHub in the Kubernetes cluster. It is also assumed
# that you have helm and kubectl installed and configured on your workstation.
# This HELM values file will require modifications which are found and 
# described by searching for 'MODS'
# Use this file as a values.yaml reference when installing the zero2jupyterhub helm chart
# following the documentation : https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html#install-jupyterhub
jupyterhub:
    hub:
        config:
            JupyterHub:
                # <MODS> You will need to configure your authentication below. Below is currently
                # a template for Github auth and you need to fill out client_id, client_secret
                # and adjust the oauth_callback_url. This info can be generated within Developer settings
                # in Github via OAuth Apps using that oauth_callback_url you define.
                # Here is a reference to other auth ways:
                # https://jupyterhub.readthedocs.io/en/stable/tutorial/getting-started/authenticators-users-basics.html
                # </MODS>
                authenticator_class: github
            GitHubOAuthenticator:
                client_id: ENC[AES256_GCM,data:Id8zipeMLywsLRYws2lfvy4RG4A=,iv:XpiYYjhQ1gnV57pHialS/0oDiX2zao/JvP073Sgz+Mo=,tag:e1WX6rHwLcPZ6RMC/UNgAQ==,type:str]
                client_secret: ENC[AES256_GCM,data:PxQFB9/eHSyjfNeuQajoCZtnWifYBFnnPnt9NEMxInYBMGOC2bYmsQ==,iv:twPcdsxoBrHvIRUjp/ZsEK9yYtQIcVC+DqmDWnpwXmc=,tag:5I0uvB1JQlpGx/QQ6YGwxA==,type:str]
                oauth_callback_url: ENC[AES256_GCM,data:h9LExIDiViNEe0hEUXTIwGnUZUNoKa8ngOl3xAnXvp0a/S/25u1ugNsV5HA0/SA=,iv:5R7w2cyG7a3o1HK8rIhp/vZnIToNBn2PAtTpAap1hg0=,tag:ymXCgwGBWXpvNzY34PbjCw==,type:str]
                allowed_organizations:
                    - ENC[AES256_GCM,data:QcjifyCoUium7yH9fSiHbQPL2lU0,iv:AngJkdW09SSAJ1Z2lRO1KK8ieU4EBYa+RdDggxuKFts=,tag:UE4lxVVwSyKXQ0pfviTX2w==,type:str]
                scope:
                    - read:org
            Authenticator:
                # <MODS> adjust the admin_users if needed. These use Github usernames </MODS>
                admin_users:
                    - ENC[AES256_GCM,data:1jnI9r0Rnpi0RqSjwuDAdl1YGI5YyBadzWI/sEeD0g==,iv:XQJRkfUNKiXqJDEPs5ojXUU/kX2ZBqmqRKjcTZy0LWA=,tag:kmpO76LxkpENq2hdKFJFEw==,type:comment]
                    - ENC[AES256_GCM,data:8BRsd05D4hzs5A==,iv:s5sR8+4EAwYVlhvxVeS/Z+WyeCwa9p2jfGz6+9ubAU8=,tag:PrUUjKbY6mm+vV/QVdfbAA==,type:str]
                    - ENC[AES256_GCM,data:sNTFGzGVtMBOUAU4WoqWonmDypuDrr7ZUFH8/YwP5X7pf0uz,iv:eOg35IGxwCPeN+fJWyURFsDlH8tlH5zI9QuwKT1pHrc=,tag:d/Dfyl6hfniU2F5maFNkFA==,type:comment]
                    - ENC[AES256_GCM,data:B8v081Vs+Fpur3z0,iv:AMZmqql85fDjM0/AQSKo3g5OQhAk9DmM91tuDZGKqwc=,tag:rnfUYkk9WoM7iaMkQwveng==,type:str]
                    - ENC[AES256_GCM,data:vy00R18UF7PQwkusuyM65MQo+bk37DGdJLVZwvUhyziv8c/t+8C6mA==,iv:kVwQuA14gmump/3o5O8r9ZbZGTCfn9vYI0HsWmJPsAY=,tag:hr+P2DadtCiRMjXHa+QD2A==,type:comment]
                    - ENC[AES256_GCM,data:hB1X9EV0Y7+f,iv:XiwkUQX4EFN3T0rvUY3R0n91yZc6HiKJPHj6TnVwhf0=,tag:6SnCHTHLLyb9zol2dmQC+A==,type:str]
                    - ENC[AES256_GCM,data:JHHtU21Bqze3S1mrWPl8n7CYWMXfb1kjDILS6yu3+NedDA==,iv:s8W9YxL82baGBVsP9GN7DK3ZlEFpnvMbsV/z2jf3Gkg=,tag:WLPcqe7Rx6Xdi3w7CcZEpA==,type:comment]
                    - ENC[AES256_GCM,data:aALRB7qQyICDH0I1IKU=,iv:bz5EPtM9wYxj/A2H61nTxFrRMCigqppsQbRRmQq9ju0=,tag:vyNBmK+BHskAIKXnpoZEyg==,type:str]
    proxy:
        # <MODS> Make sure you fill in a secretToken. Run: 'openssl rand -hex 32'
        # on your local workstation to get that value. </MODS>
        secretToken: ENC[AES256_GCM,data:nGOYUbjHrEsWmMIMnRYyPYI8Vml3buEhzYJHunBZR7yh5j9sCSv6C2kalNcDspRSt0NNMZek6C57KhpJ+ejteQ==,iv:k0HxTZue2vpbXzjYdvl/gJ8agWfIY17BYlgMHDDYb7w=,tag:rBOqpyLXNlM2XQu16/ugKA==,type:str]
        service:
            type: ClusterIP
    singleuser:
        extraEnv:
            # About DASK_ prefixed variables we set:
            #
            # 1. k8s native variable expansion is applied with $(MY_ENV) syntax. The
            #    order variables are defined matters though and we are under the
            #    mercy of how KubeSpawner renders our passed dictionaries.
            #
            # 2. Dask loads local YAML config.
            #
            # 3. Dask loads environment variables prefixed DASK_.
            #    - DASK_ is stripped
            #    - Capitalization is ignored
            #    - Double underscore means a nested configuration
            #    - `ast.literal_eval` is used to parse values
            #
            # 4. dask-gateway and dask-distributed looks at its config and expands
            #    expressions in {} again, sometimes only with the environment
            #    variables as context but sometimes also with additional variables.
            #
            # References:
            # - K8s expansion:     https://kubernetes.io/docs/tasks/inject-data-application/define-interdependent-environment-variables/
            # - KubeSpawner issue: https://github.com/jupyterhub/kubespawner/issues/491
            # - Dask config:       https://docs.dask.org/en/latest/configuration.html
            # - Exploration issue: https://github.com/2i2c-org/infrastructure/issues/442
            #
            # DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE makes the default worker image
            # match the singleuser image.
            DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: $(JUPYTER_IMAGE_SPEC)
            # DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT makes some environment
            # variables be copied over to the worker nodes from the user nodes.
            #DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT: '$"SCRATCH_BUCKET": "$(SCRATCH_BUCKET)", "PANGEO_SCRATCH": "$(PANGEO_SCRATCH)"'
            # DASK_DISTRIBUTED__DASHBOARD__LINK makes the suggested link to the
            # dashboard account for the /user/<username>/<server-name> prefix in the path.
            # JUPYTERHUB_SERVICE_PREFIX has leading and trailing slashes as appropriate
            DASK_DISTRIBUTED__DASHBOARD__LINK: $(JUPYTERHUB_SERVICE_PREFIX)proxy/{port}/status
        storage:
            extraVolumes:
                - name: ENC[AES256_GCM,data:V6GlmI9WwCaDYg==,iv:T6plO/Kun2tW+m2qvlm1p+WkQPfkXE23YmSABAkqmsU=,tag:vkc/KWIRjT7JOzQtOnJ4KQ==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:1IeUHL9kHk+XL39ua3M2AxV6OoRyVA==,iv:pfwUzTC3vA4sBFuueS2sxLqxvYqxf5pl63THTnAh1Bc=,tag:uC4IANzyA8KK9260Co+/RQ==,type:str]
                    path: ENC[AES256_GCM,data:YTC7iMwVhyM4IjAlMdySoDGqrOeAWQC4sA0mBbfOxA==,iv:n+ixSpiW1oT6EYfiexxzGxL5hpAQgqEpYaknuZYM3oY=,tag:5FVqecQ0n/zIu/TzAzx+Ig==,type:str]
                - name: ENC[AES256_GCM,data:hJRjkm28cLN/YxxH0Cn/d5Q=,iv:FMZtmdZCNifRQpHpnVvtl/dG1y9cPztZihPaY5G5+ns=,tag:YTtC+I3Ftq1sp8pS3bF6yQ==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:6w0R63H9rkndVhi6Rg2TZgo=,iv:41AWZMt3bt19KIaVL0qfKcuHbGfAkQhU38bCQk7KG5Q=,tag:dtOgQIzzc9ewBgtlr7m54g==,type:str]
                    path: ENC[AES256_GCM,data:HJ5umXxRCT3gMhAo0MjehZLhof3i,iv:DR8/T5c0zGAsWKLLVjvTNEPq7+K6mHs0FxOTbBQBmUY=,tag:7QWbLE8Z0dDm5D1vbaXWOw==,type:str]
                - name: ENC[AES256_GCM,data:XDq0njKVpVU=,iv:IJo9aOu4+Oon5L4xz9Xzhjgu2TXOUzbrEbtg1X/+IW4=,tag:gl1fNVmLnA5lB/TtIvqAjQ==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:mls7Oj9UN9vKlu2VJ4BLar8=,iv:qBcbXa/JMRzcHKHPV6O2DTBhZbzxrV+o8sSdmZmNhpI=,tag:iVR31MPVipRBTeYfGVEk1Q==,type:str]
                    path: ENC[AES256_GCM,data:s6ERqSG6chKuhy8=,iv:5xue8nSudX4xsAQV+jEJCRZs/GZ5lJCranwqg7JYWKo=,tag:ccVRT9TKl4fSql7p4o/Zwg==,type:str]
            extraVolumeMounts:
                - name: ENC[AES256_GCM,data:ES/3g5onb/ybpQ==,iv:NZ7IyseNBjFLos/FY+X4REW/iMATgX3oeVKCyWYV370=,tag:0C6HaTVPqf9RWpNBVtTL/w==,type:str]
                  mountPath: ENC[AES256_GCM,data:Eydx9KxCJZffg9oRNK5++9j4RQ==,iv:YJnDPDA0NOOe+9HegBFGN7A73DLEFFTQolAPLRKdOB4=,tag:gWKJF0lzpoecz67COzRg1Q==,type:str]
                  readOnly: ENC[AES256_GCM,data:GkkAMw==,iv:1EjAXcvCGtbUiKsH5UCpHzDgtf8T/nXW9CrUfVGNuAw=,tag:zRzxsldJlNJ4HiNwxP/bvA==,type:bool]
                - name: ENC[AES256_GCM,data:rzi337aSEWn2DwXxX7qvQss=,iv:SeFYnYf2hL73zhhRbh3shx1NYaVoQ3HrKLTpeU9MvrY=,tag:kZVx4JzXcUnu4nps1LA47Q==,type:str]
                  mountPath: ENC[AES256_GCM,data:VKTpoCXgmLvGMm6YD3LIAb3i,iv:Ba5e4sjiFeG9QK9GHP884Weg2RBSvQ3CFMycxp5eBjw=,tag:x4pTyeKpIPdav08Azxa/RA==,type:str]
                  readOnly: ENC[AES256_GCM,data:G70uMg==,iv:54+2fshBSeYMa28xNNSg4YmvjGIXERzjqdv834GJyks=,tag:Y3QlX8khJmnqP7rNOquPUQ==,type:bool]
                - name: ENC[AES256_GCM,data:/AhuDzxCxZ8=,iv:e53TYCxhG+LSyEVgx8izUX8ypZAoDa8YUHMmtCR6fAg=,tag:RREjIf5jlZEG4QujHrNuBA==,type:str]
                  mountPath: ENC[AES256_GCM,data:U3vG05MtpPBtTHUtnNmc,iv:3tw7yDhi+h9xVozL3hCPDVLxSi8JV1Bz+A3MfdRYhVI=,tag:qeW00fy+xR0wNqU9PhckGw==,type:str]
                  readOnly: ENC[AES256_GCM,data:K7AXoA==,iv:sNztLOZwldxhS0g1Db2UZJMEa4yujrYo/NhuuyNYF/k=,tag:eL6RrB2VsZvQkWx+8XpdKA==,type:bool]
        image:
            # image choice preliminary and is expected to be setup via
            # https://ncar-cisl.2i2c.cloud/services/configurator/ by the community
            #
            # pangeo/pangeo-notebook is maintained at: https://github.com/pangeo-data/pangeo-docker-images
            name: pangeo/pangeo-notebook
            tag: 2023.05.18
        profileList:
            # NOTE: About node sharing
            #
            #       CPU/Memory requests/limits are actively considered still. This
            #       profile list is setup to involve node sharing as considered in
            #       https://github.com/2i2c-org/infrastructure/issues/2121.
            #
            #       - Memory requests are different from the description, based on:
            #         whats found to remain allocate in k8s, subtracting 1GiB
            #         overhead for misc system pods, and transitioning from GB in
            #         description to GiB in mem_guarantee.
            #       - CPU requests are lower than the description, with a factor of
            #         10%.
            #
            - display_name: Pangeo Notebook
              description: Start a container with the chosen specifications on a node of this type
              slug: pangeo
              default: true
              profile_options:
                requests:
                    # NOTE: Node share choices are in active development, see comment
                    #       next to profileList: above.
                    display_name: Container Selection
                    choices:
                        mem_1:
                            default: true
                            display_name: ~1 GB, ~0.125 CPU
                            kubespawner_override:
                                mem_guarantee: 0.904G
                                cpu_guarantee: 0.013
                        mem_4:
                            display_name: ~4 GB, ~0.5 CPU
                            kubespawner_override:
                                mem_guarantee: 1.809G
                                cpu_guarantee: 0.025
                        mem_16:
                            display_name: ~16 GB, ~2.0 CPU
                            kubespawner_override:
                                mem_guarantee: 14.469G
                                cpu_guarantee: 0.5
              kubespawner_override:
                cpu_limit: null
                mem_limit: null
                #        node_selector:
                #          node.kubernetes.io/instance-type: r5.xlarge
            - display_name: NVIDIA Tensor A10
              slug: gpu
              description: Start a container on a dedicated node with a GPU
              profile_options:
                image:
                    display_name: Image
                    choices:
                        tensorflow:
                            display_name: Pangeo Tensorflow ML Notebook
                            slug: tensorflow
                            kubespawner_override:
                                image: pangeo/ml-notebook:2023.05.18
                        pytorch:
                            display_name: Pangeo PyTorch ML Notebook
                            default: true
                            slug: pytorch
                            kubespawner_override:
                                image: pangeo/pytorch-notebook:2023.05.18
                        ncartensor:
                            display_name: NCAR Tensorflow ML Notebook
                            slug: ncartensor
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-tf:2023-12-14.22
                                imagePullSecrets:
                                    - harbor-registry-secret
                        ncarpytorch:
                            display_name: NCAR Pytorch ML Notebook
                            slug: ncarpytorch
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-pyt:2023-12-14.22
                                imagePullSecrets:
                                    - harbor-registry-secret
              kubespawner_override:
                mem_limit: null
                mem_guarantee: 14G
                environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility
                    ##        node_selector:
                    ##          node.kubernetes.io/instance-type: g4dn.xlarge
                extra_pod_config:
                    runtimeClassName: nvidia
                extra_resource_limits:
                    nvidia.com/gpu: "1"
            - display_name: Test NCAR Harbor
              description: 6 GB of memory; up to 4 vCPUS
              profile_options:
                image:
                    display_name: Latest
                    choices:
                        tensorflow:
                            display_name: NCAR Latest Test
                            slug: ncar
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-base:2023-11-28.23
                                imagePullSecrets:
                                    - harbor-registry-secret
              kubespawner_override:
                mem_guarantee: 2G
                mem_limit: 6G
                cpu_guarantee: 1
                cpu_limit: 4
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 600m
            nginx.org/client-max-body-size: 10m
            nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/secure-backends: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/websocket-services: proxy-public
            nginx.org/websocket-services: proxy-public
            cert-manager.io/cluster-issuer: incommon
        ingressClassName: nginx
        # <MODS> Adjust the hosts entries in this next session.
        hosts:
            - ENC[AES256_GCM,data:DJNfhd0ombILCS5MIE+OtmiXwUc=,iv:M8DUUrlItNpVQ3oFVGSfrPCgm4WvPkk+EPAznVaIlwQ=,tag:f8PH/29MmIeUrjQCtG56Ew==,type:str]
        tls:
            - hosts:
                - ENC[AES256_GCM,data:V2f6lQ+9KNPY/fA0bngr00J5XQs=,iv:T/3xvTnfkkV4vFzwYvOdpA2uprdLjz+ozOZGxzkOOJg=,tag:RGGrLjvkrZvt/hTouy7BRg==,type:str]
              secretName: ENC[AES256_GCM,data:uGbTqn0e/1gcjrVZQyIaKHPwNg==,iv:BFHS04UXyCR4Ex7iDx8fjKmM5DWibJZtPCmnIl01e+4=,tag:wjvB0VodvHDSFPPDcBwoTQ==,type:str]
              # </MODS>
dask-gateway:
    # Enabling dask-gateway will install Dask Gateway as a dependency.
    enabled: true
    # Futher Dask Gateway configuration goes here
    # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
    gateway:
        backend:
            scheduler:
                extraPodConfig: null
                #          serviceAccountName: user-sa
                #          tolerations:
                #            # Let's put schedulers on notebook nodes, since they aren't ephemeral
                #            # dask can recover from dead workers, but not dead schedulers
                #            - key: "hub.jupyter.org/dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #            - key: "hub.jupyter.org_dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #          nodeSelector:
                #            k8s.dask.org/node-purpose: scheduler
                cores:
                    request: 0.01
                    limit: 1
                memory:
                    request: 128M
                    limit: 1G
            worker:
                extraContainerConfig:
                    securityContext:
                        runAsGroup: 1000
                        runAsUser: 1000
                extraPodConfig:
                    #          serviceAccountName: user-sa
                    securityContext:
                        fsGroup: 1000
        #          tolerations:
        #            - key: "k8s.dask.org/dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #            - key: "k8s.dask.org_dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #          nodeSelector:
        #            # Dask workers get their own pre-emptible pool
        #            k8s.dask.org/node-purpose: worker
        # TODO: figure out a replacement for userLimits.
        extraConfig:
            optionHandler: |
                from dask_gateway_server.options import Options, Integer, Float, String, Mapping
                import string

                # Escape a string to be dns-safe in the same way that KubeSpawner does it.
                # Reference https://github.com/jupyterhub/kubespawner/blob/616f72c4aee26c3d2127c6af6086ec50d6cda383/kubespawner/spawner.py#L1828-L1835
                # Adapted from https://github.com/minrk/escapism to avoid installing the package
                # in the dask-gateway api pod which would have been problematic.
                def escape_string_label_safe(to_escape):
                    safe_chars = set(string.ascii_lowercase + string.digits)
                    escape_char = "-"
                    chars = []
                    for c in to_escape:
                        if c in safe_chars:
                            chars.append(c)
                        else:
                            # escape one character
                            buf = []
                            # UTF-8 uses 1 to 4 bytes per character, depending on the Unicode symbol
                            # so we need to transform each byte to its hex value
                            for byte in c.encode("utf8"):
                                buf.append(escape_char)
                                # %X is the hex value of the byte
                                buf.append('%X' % byte)
                            escaped_hex_char = "".join(buf)
                            chars.append(escaped_hex_char)
                    return u''.join(chars)

                def cluster_options(user):
                    safe_username = escape_string_label_safe(user.name)
                    def option_handler(options):
                        if ":" not in options.image:
                            raise ValueError("When specifying an image you must also provide a tag")
                        scheduler_extra_pod_annotations = {
                            "hub.jupyter.org/username": safe_username,
                            "prometheus.io/scrape": "true",
                            "prometheus.io/port": "8787",
                        }
                        extra_labels = {
                            "hub.jupyter.org/username": safe_username,
                        }
                        return {
                            "worker_cores_limit": options.worker_cores,
                            "worker_cores": options.worker_cores,
                            "worker_memory": "%fG" % options.worker_memory,
                            "image": options.image,
                            "scheduler_extra_pod_annotations": scheduler_extra_pod_annotations,
                            "scheduler_extra_pod_labels": extra_labels,
                            "worker_extra_pod_labels": extra_labels,
                            "environment": options.environment,
                        }
                    return Options(
                        Integer("worker_cores", 4, min=1, label="Worker Cores"),
                        Float("worker_memory", 8, min=1, label="Worker Memory (GiB)"),
                        # The default image is set via DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE env variable
                        String("image", label="Image"),
                        Mapping("environment", {}, label="Environment Variables"),
                        handler=option_handler,
                    )
                c.Backend.cluster_options = cluster_options
            idle: |
                # timeout after 30 minutes of inactivity
                c.KubeClusterConfig.idle_timeout = 1800
        # Users connect to the Gateway through the JupyterHub service.
        prefix: /services/dask-gateway
        auth:
            # Use JupyterHub to authenticate with Dask Gateway
            type: jupyterhub
    traefik:
        #    nodeSelector:
        #      k8s.dask.org/node-purpose: core
        service:
            # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.
            type: ClusterIP
# A placeholder as global values that can be referenced from the same location
# of any chart should be possible to provide, but aren't necessarily provided or
# used.
#global: {}
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ucetgj7k3whaqf9nulacsqarur6nrgzuyt59apeptu5cphd6ksdsqpy5he
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA1eFNJWC9ONWEySUpXQ2NC
            S3d0dXJiKzZVZTlFTnU1bG5OSFh4NlRPcWhVCmRHSFhzODVHQTJ6VGgvY1o2bk5h
            MkJtb3lGdVVpZnJGYlZBUlV6SkdlMEUKLS0tIGdRME5HRThHeVRUam9BSE1ybmgy
            MTd5TjFaOWVzdHFjZFZReWhZUWEyT1UK5nMQ+2Y+0+cZjBEslXFlcPre8OjqfrkM
            ezpHDB9+O4LcypOVfiVP41kqo7tG02Lht1V/ildDMVq2svdg9HilWg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1dnkv8vy8xkl5afwuwl55ycpquy2uk7ypc5ad87sfug2zffp6jgkqwwzglr
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSArVVl4c0xkY01SNHJOWE1v
            a3gzOWExU05mVHZLL1k0SHdHdXBUWWQxUnhJCmlKTlpzNDJzVnV2VU5sWG1OUjBK
            OCtpN0ZFUG1DZlNzR202UCtoWjlaeFEKLS0tIGtRbmhXaVB1VDBYYXR1VDM2cWdI
            NkdQYjYzMmFQdGFrZHFoOXZEb3pyUjgKFkpi9jTdmTLTvCzsbuVth194Ov62tEUY
            85PO4+mOpS6dZekk0Bi2zzNuQye+HWYvFhhH+U9AF+xnFzOz8rWo3g==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1wt75fkqsa2ngrhtmr7ws2ve8v9h2463hryj4jk4k7m5khxmc9pgqgqag8x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBqRzRUWUd1SWFLNm1WekFD
            dnV5UDlZR0l5dlVaRHdMUG16L1Z1bEVIbmxjCjNjUDFpM2o4SU9rTGdpcTFMYmpO
            V2wzYTRSd1VPZHkwV2dGK2RxZERWcFEKLS0tIGFqYm9kSGpneGhtTGVDUzZmak9D
            K2lYUFllZWlIUUFZaHhadDRUbmhJY2sKz7FZzMQWHolMnxjjGTqmRNX+1+r0Ib88
            SSDWsc/iSYEI9EJjVp3hsDDPxh7p9SPfg2kstTbgioAlyrb4VRzHaw==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1fqw4znyl0zjpw5ta7ll3auxpzg8dme578jgw43a0dtzjhwjn4qlstaez7c
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBvcnhMNldnc3BNSGtUWlRW
            dTBaeVM4YUtiT1gyTXFSQWk1UFZqN1AwZ3lRCnBqb3dUUGpDUitoNWtYSlh5aWNh
            Y3F2VVVNV1FtWEhCVEs5aFVyVzVucG8KLS0tICs4UC9udnpBVWlQbUxhUXdOeW1y
            VWJBcE15ZlQrY2lpTVhrL1dGYVV0ZUEKul1Zi3VJH0b0K/DFVJykISmJU22Ka+d3
            JUGlmwc0JMW91MsVqJfgxgG92pYP9zMgJSHv0nNsZqam7XBms2lZmQ==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1m2ay7zlek6d4uctt09vsw5l8gpydjlvu9xemv8pqh97urdmhhyrsh9qe86
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBTM20xN0xVa05DYWhDVFdG
            VjQvVjhmT0tPL2g0VThuZGxiUHYvOSticUN3CjBmaVBXZGs2T1RzZHZwT2N1Qk5l
            cDEzenlrU0JGdDg1WlZMUWMvZGxMZXcKLS0tIEpYQ0txTlVwMnBUeU1QT3k3UW1o
            UHk4RmdEcGZWVXV0elBtZjFPTDJIRUkK7ZDrtmpJTFQIWM5NIbcqdR0xnUnonlDT
            HfjKInhTg6Kk1vHx8naLOORBWQxMXSDX9SG0pGiTCGiPg6HwfBqlag==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2023-12-18T16:19:11Z"
    mac: ENC[AES256_GCM,data:1su2NVrNVd/jUOpjFexzMEitVz2Zh4Ds+nvDHsGqln/X0zs0YC5LYU+5DdJV6dzV25R2kR+5LRIv+vqM/bCRlHCSkIpKxP6pVXZwfrsT6zVmJCwymmdFAC4s5jNOiiPdVoVkLEnREXbg/ftwNyDaSu3Kx/RRDW6Sk6AkWkAurQY=,iv:1K2XMdBysPB6DhyGlyvqaDnRlhh2lj/CiUXCYj0Ui58=,tag:PCYSA8vx1O49duZmaJrUyg==,type:str]
    pgp: []
    encrypted_regex: ^(client_id|client_secret|secretToken|admin_users|oauth_callback_url|allowed_organizations|extraVolumes|extraVolumeMounts|hosts|secretName)$
    version: 3.8.1
