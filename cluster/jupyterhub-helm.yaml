# With a Kubernetes cluster available and HELM installed, this HELM values
# file will install JupyterHub in the Kubernetes cluster. It is also assumed
# that you have helm and kubectl installed and configured on your workstation.
# This HELM values file will require modifications which are found and 
# described by searching for 'MODS'
# Use this file as a values.yaml reference when installing the zero2jupyterhub helm chart
# following the documentation : https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html#install-jupyterhub
jupyterhub:
    hub:
        config:
            JupyterHub:
                # <MODS> You will need to configure your authentication below. Below is currently
                # a template for Github auth and you need to fill out client_id, client_secret
                # and adjust the oauth_callback_url. This info can be generated within Developer settings
                # in Github via OAuth Apps using that oauth_callback_url you define.
                # Here is a reference to other auth ways:
                # https://jupyterhub.readthedocs.io/en/stable/tutorial/getting-started/authenticators-users-basics.html
                # </MODS>
                authenticator_class: github
            GitHubOAuthenticator:
                client_id: ENC[AES256_GCM,data:t9VSunpt7qvrNnV0aW43JXCpnp4=,iv:aDPj9R11MYnVCF6riTzgrnCQKvkm7T6A0aC4CvyQf/s=,tag:ebQ/rcZEIN13r/5f2YMF0A==,type:str]
                client_secret: ENC[AES256_GCM,data:B/6iy/HdwlOhiB8Nm+KDqhs+wfE4uMA6fvCi2xAWw4ju3NOLokYxgA==,iv:veIsiqbWY20Qvq46nXXlMkBCUR9M28Fsk5ei0DtzIaA=,tag:I/AIl6HEElD7bcqsQP9d4A==,type:str]
                oauth_callback_url: ENC[AES256_GCM,data:KartWiHAVH81aH3J2Ou26oxOLSvnil4t9g823dPUZyXCuFH2/gLzCGa1nfdmcOY=,iv:mxSjuad/IHdr3xTBva8NxARLN4I3y6rdHjkhOZG799k=,tag:cg+ag7UZbvdV7PrTq5cnBA==,type:str]
                allowed_organizations:
                    - ENC[AES256_GCM,data:QW1dzQDjeEtHMQKq1aBaIXKtiUe5,iv:5dfdL73qMdW+dFl7pVhzZTJtRPZOUgcIQlN5WjwIuNE=,tag:BGPqZ1WX1jv5peGaXSUBKg==,type:str]
                scope:
                    - read:org
            Authenticator:
                # <MODS> adjust the admin_users if needed. These use Github usernames </MODS>
                admin_users:
                    - ENC[AES256_GCM,data:7uumucdNGZBTfIclZCssv6adFReWq1GCgk4NdMXuMA==,iv:iamcnetqWGk45ReWzhNExTu04x5T1RAtypo4XVm4Mk4=,tag:dZK1w7vH4zwIX8x08//csA==,type:comment]
                    - ENC[AES256_GCM,data:4o/FfRkABSA41A==,iv:w1Fs7Nqx4T99GNF6jN5w+f2HBCjhrYRgA75LKeWv3wY=,tag:U/zXqnAFnw0cBx5dD+6ccA==,type:str]
                    - ENC[AES256_GCM,data:2IW18b5M8OZIPl/Qh95UKHTW0SPv6P0/WzphfGY7kDhdQDX1,iv:Z0oSh38boMpSB2C2GWKj+48VsDod+rquLB0LhGCiAiE=,tag:GDb3zoiu/uzseJgMhheqQA==,type:comment]
                    - ENC[AES256_GCM,data:jxne/7rR6n3lfJwG,iv:cVndsHL/pduEGceIQ1nyvjbUHQspaVwoVizmFuTpAuA=,tag:0PgmjgQ3RY6/qpZ3Kpc94A==,type:str]
                    - ENC[AES256_GCM,data:IU3TKG10wM9Z/RpvWkTntFAbhQQSvVr+QtNGg7eOIB7pF3q8j6gC6A==,iv:WoTIRXcMmCCuOzkgadHIHWd5R0fFPEC/Nd0ttsev2I4=,tag:C5AT6/OETRhKbr2hd6hDTQ==,type:comment]
                    - ENC[AES256_GCM,data:8BfnEZGyzHfm,iv:EQtTxhOLqXoJ4LLjgUUItka/9WKNETM/8zPvgV4xKw4=,tag:rIwE/Qact6SSenoUiszNog==,type:str]
                    - ENC[AES256_GCM,data:eJ1QIbKkiIk36qD6EoAlRN7iU21quiWMEUCplOBz7wA+sw==,iv:sFkjURafdZcreHsuI8eeVUSciz6IPnQKBUExUSLJfCI=,tag:L6qkDqWAFt3oOxeYTQy0UA==,type:comment]
                    - ENC[AES256_GCM,data:1qzGP47sR1wFuqFjXmQ=,iv:pfRKihZOmxI7G+omsiZFzGiRQ4EPrUx12e+vXXCt4HU=,tag:/48sDZNjUWvmP44VIe1dtA==,type:str]
    proxy:
        # <MODS> Make sure you fill in a secretToken. Run: 'openssl rand -hex 32'
        # on your local workstation to get that value. </MODS>
        secretToken: ENC[AES256_GCM,data:EPeQGXaVy80HGb4zXeHxF1mMf8eo0SthMdJK4oCImFhxBu4A/qufcO0BwKRqiUNsg3nMT/f4idll+ocKUNenLg==,iv:OHRD9UWTbpK46KRpfFNeeBePHkvLqzfFoRBsmka+Kro=,tag:FLU63oikhzASxnP5AYPi/Q==,type:str]
        service:
            type: ClusterIP
    singleuser:
        extraEnv:
            # About DASK_ prefixed variables we set:
            #
            # 1. k8s native variable expansion is applied with $(MY_ENV) syntax. The
            #    order variables are defined matters though and we are under the
            #    mercy of how KubeSpawner renders our passed dictionaries.
            #
            # 2. Dask loads local YAML config.
            #
            # 3. Dask loads environment variables prefixed DASK_.
            #    - DASK_ is stripped
            #    - Capitalization is ignored
            #    - Double underscore means a nested configuration
            #    - `ast.literal_eval` is used to parse values
            #
            # 4. dask-gateway and dask-distributed looks at its config and expands
            #    expressions in {} again, sometimes only with the environment
            #    variables as context but sometimes also with additional variables.
            #
            # References:
            # - K8s expansion:     https://kubernetes.io/docs/tasks/inject-data-application/define-interdependent-environment-variables/
            # - KubeSpawner issue: https://github.com/jupyterhub/kubespawner/issues/491
            # - Dask config:       https://docs.dask.org/en/latest/configuration.html
            # - Exploration issue: https://github.com/2i2c-org/infrastructure/issues/442
            #
            # DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE makes the default worker image
            # match the singleuser image.
            DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: $(JUPYTER_IMAGE_SPEC)
            # DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT makes some environment
            # variables be copied over to the worker nodes from the user nodes.
            #DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT: '$"SCRATCH_BUCKET": "$(SCRATCH_BUCKET)", "PANGEO_SCRATCH": "$(PANGEO_SCRATCH)"'
            # DASK_DISTRIBUTED__DASHBOARD__LINK makes the suggested link to the
            # dashboard account for the /user/<username>/<server-name> prefix in the path.
            # JUPYTERHUB_SERVICE_PREFIX has leading and trailing slashes as appropriate
            DASK_DISTRIBUTED__DASHBOARD__LINK: $(JUPYTERHUB_SERVICE_PREFIX)proxy/{port}/status
        storage:
            extraVolumes:
                - name: ENC[AES256_GCM,data:1JYB0zQeHlYljw==,iv:Ghe2A/fGinzm7pQ6cQmH2SCQ5V29V7HcQNRfB7jJjLQ=,tag:ywQxOzSnfSnYYxAo0u7NMQ==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:aFMbIgfqKAZ+z0f/xAICLRGVeWDQWA==,iv:8+RKrT7x6+Kq1oYDzCD3e4ri2oZrhg7+eC8w4CgZuKQ=,tag:dVZmql1ChGL5vDHFYEGCDw==,type:str]
                    path: ENC[AES256_GCM,data:Uv0XoyIfXsbVdvM7lF1UEmoGyqwmt9vbQ3NjwlR/Ug==,iv:R0sZx2GgOXjD0CqwebB6B451CmsWJ4+Sn3ssb1rBzk8=,tag:vD05m7wl/0MwmIUbfSZV1g==,type:str]
                - name: ENC[AES256_GCM,data:Yo7SOY3Zr9c8MuvbPhgMmRY=,iv:+3ACC0K3nPNDiPOy6Rs7EME1ScWTisnggTpxbC7YJhA=,tag:DIzNO+AAfICz2C+LZXylfw==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:RsvOLDUMhbj5CLPD3qXaHGk=,iv:eRMfdLPuZ2qz09B2oR/Ggt5ijDgM3K3j5QcrjzNqWJs=,tag:TGmPHvuIKVTlxskU4RhvoQ==,type:str]
                    path: ENC[AES256_GCM,data:j6Ip84Rn/YjLw2N/D6KXus9ZxYdr,iv:WYuwBTiUYGpNoKFkgAACZHSlaOY6SpVxCKJNImXVGLQ=,tag:TafoBv/oha4F0PhqOGqYVw==,type:str]
                - name: ENC[AES256_GCM,data:ATmI4OKoLHQ=,iv:kTgxAm52gR8KN3tCkOC8h514qG6+YGzdSvA9Oii8T90=,tag:tIw8Pcuwd9Li7Jnn+JqqZQ==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:F3+HGNPKCBc/DayzGBHm74c=,iv:YMk0zv07NG1VwcZLWdnkRHoP7FKZcm3YkwPUngLpIXY=,tag:NKcK9bnkTHODTfyYwExlFw==,type:str]
                    path: ENC[AES256_GCM,data:r3B/wfTFutQAwXg=,iv:OggMjfVAdOfmjMgGVOrTQiifRxfqlnumNF7nbVeeHvA=,tag:ftT5UJ8qPsNq+Ab8L+pPaA==,type:str]
            extraVolumeMounts:
                - name: ENC[AES256_GCM,data:ywWHr8VfISjerg==,iv:xE+EoFdnMjAPZ6lZR0bV90CPW9xm0KCg8gIBiUOY+Nw=,tag:qH40RKjib28VqZTKG5dWAA==,type:str]
                  mountPath: ENC[AES256_GCM,data:uWrCFQBywu7bo5zFm4qiOf++5Q==,iv:q9P7uLFf90MLO4SQbZZpfogbaKm2mrI1F47ABXmmAL8=,tag:FyZw+njrSAC4cCP65TzjyQ==,type:str]
                  readOnly: ENC[AES256_GCM,data:pyLaKg==,iv:8Cza0L2wEBCG3rhsGD4Mx5iu0kRtDozLudsfWJmIQg8=,tag:72JX06/1H0cTCGBB6eJQWA==,type:bool]
                - name: ENC[AES256_GCM,data:HqikTXIvz2IUC0pg9RBYcbI=,iv:JQ9W0F/WTMlbecuNf/mDoy+Zey+vEDpSU14Bgs00fTE=,tag:NEzwJu0QgSfvkWhddNA4zA==,type:str]
                  mountPath: ENC[AES256_GCM,data:6QJvbsafsDMVGhx4V3PXkYOg,iv:iAnfVSINzPO/aDuQ6eUJ7e4v/2ajAIdLGxNzM/sLnGs=,tag:GPzMz9hlzeYi1FvNAF0YzQ==,type:str]
                  readOnly: ENC[AES256_GCM,data:bEaowg==,iv:wOhEVLd1Y827FiMAxJmY8DO/LuCat84hcCO5WMapfCE=,tag:vPfqJGchGcFuFDlzpgsIyw==,type:bool]
                - name: ENC[AES256_GCM,data:NjpqsQk7Ng4=,iv:vTSRCzijlNrB7MeszVV2/He096q2OJFw/gB3zQbu2Ow=,tag:KC3/FvodIyCAIwqJM2ZJlw==,type:str]
                  mountPath: ENC[AES256_GCM,data:8TqZe+kZBxKrMmnUVQl2,iv:5+TG5mOrGgiqyW1Fws7/vVPg5gR2jM/2OsjLcoseNfk=,tag:+qlMIbgi4FUXFzN9siFTIg==,type:str]
                  readOnly: ENC[AES256_GCM,data:IXRaAg==,iv:CTwJlZvErlmD93oNZ5EJXN6zEBqoVLpHd4oeukoCpP0=,tag:3p/1Ob4y/zWIHP1QPDJQ0g==,type:bool]
        image:
            # image choice preliminary and is expected to be setup via
            # https://ncar-cisl.2i2c.cloud/services/configurator/ by the community
            #
            # pangeo/pangeo-notebook is maintained at: https://github.com/pangeo-data/pangeo-docker-images
            name: pangeo/pangeo-notebook
            tag: 2023.05.18
        profileList:
            # NOTE: About node sharing
            #
            #       CPU/Memory requests/limits are actively considered still. This
            #       profile list is setup to involve node sharing as considered in
            #       https://github.com/2i2c-org/infrastructure/issues/2121.
            #
            #       - Memory requests are different from the description, based on:
            #         whats found to remain allocate in k8s, subtracting 1GiB
            #         overhead for misc system pods, and transitioning from GB in
            #         description to GiB in mem_guarantee.
            #       - CPU requests are lower than the description, with a factor of
            #         10%.
            #
            - display_name: Pangeo Notebook
              description: Start a container with the chosen specifications on a node of this type
              slug: pangeo
              default: true
              profile_options:
                requests:
                    # NOTE: Node share choices are in active development, see comment
                    #       next to profileList: above.
                    display_name: Container Selection
                    choices:
                        mem_1:
                            default: true
                            display_name: ~1 GB, ~0.125 CPU
                            kubespawner_override:
                                mem_guarantee: 0.904G
                                cpu_guarantee: 0.013
                        mem_4:
                            display_name: ~4 GB, ~0.5 CPU
                            kubespawner_override:
                                mem_guarantee: 1.809G
                                cpu_guarantee: 0.025
                        mem_16:
                            display_name: ~16 GB, ~2.0 CPU
                            kubespawner_override:
                                mem_guarantee: 14.469G
                                cpu_guarantee: 0.5
              kubespawner_override:
                cpu_limit: null
                mem_limit: null
                #        node_selector:
                #          node.kubernetes.io/instance-type: r5.xlarge
            - display_name: NVIDIA Tensor A10
              slug: gpu
              description: Start a container on a dedicated node with a GPU
              profile_options:
                image:
                    display_name: Image
                    choices:
                        tensorflow:
                            display_name: Pangeo Tensorflow ML Notebook
                            slug: tensorflow
                            kubespawner_override:
                                image: pangeo/ml-notebook:2023.05.18
                        pytorch:
                            display_name: Pangeo PyTorch ML Notebook
                            default: true
                            slug: pytorch
                            kubespawner_override:
                                image: pangeo/pytorch-notebook:2023.05.18
                        ncartensor:
                            display_name: NCAR Tensorflow ML Notebook
                            slug: ncartensor
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-tf:2023-12-01.17
                                imagePullSecrets:
                                    - harbor-registry-secret
                        ncarpytorch:
                            display_name: NCAR Pytorch ML Notebook
                            slug: ncarpytorch
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-pyt:2023-12-01.17
                                imagePullSecrets:
                                    - harbor-registry-secret
              kubespawner_override:
                mem_limit: null
                mem_guarantee: 14G
                environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility
                    ##        node_selector:
                    ##          node.kubernetes.io/instance-type: g4dn.xlarge
                extra_pod_config:
                    runtimeClassName: nvidia
                extra_resource_limits:
                    nvidia.com/gpu: "1"
            - display_name: Test NCAR Harbor
              description: 6 GB of memory; up to 4 vCPUS
              profile_options:
                image:
                    display_name: Latest
                    choices:
                        tensorflow:
                            display_name: NCAR Latest Test
                            slug: ncar
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-base:2023-11-28.23
                                imagePullSecrets:
                                    - harbor-registry-secret
              kubespawner_override:
                mem_guarantee: 2G
                mem_limit: 6G
                cpu_guarantee: 1
                cpu_limit: 4
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 600m
            nginx.org/client-max-body-size: 10m
            nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/secure-backends: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/websocket-services: proxy-public
            nginx.org/websocket-services: proxy-public
            cert-manager.io/cluster-issuer: incommon
        ingressClassName: nginx
        # <MODS> Adjust the hosts entries in this next session.
        hosts:
            - ENC[AES256_GCM,data:sZw9ufYnqxqXvDljT9LEQw4Lr+g=,iv:C6EpZ7lxGTpsUY8Zdkk05v52YzL7vbfsTyWqB1MrwZw=,tag:Fz5q9JBnnBKON2kDHuDtNA==,type:str]
        tls:
            - hosts:
                - ENC[AES256_GCM,data:aTacvJIdylGAmEi/xwlt6UGbySs=,iv:MAEvbocMvvWWhH6CrjX3oYMAN0BInMUbRgNdKgv5kAE=,tag:EXJwlgWRWuia/KmjVtr46Q==,type:str]
              secretName: ENC[AES256_GCM,data:DQkzL5wFi3FTEmOKjNQJmM9Elg==,iv:VCXX7htW2EXo8XIweMuE2SxZB8ggsA1s664WWAdy2eM=,tag:r2d4Pz4cyKMoGAYVbYdfwQ==,type:str]
              # </MODS>
dask-gateway:
    # Enabling dask-gateway will install Dask Gateway as a dependency.
    enabled: true
    # Futher Dask Gateway configuration goes here
    # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
    gateway:
        backend:
            scheduler:
                extraPodConfig: null
                #          serviceAccountName: user-sa
                #          tolerations:
                #            # Let's put schedulers on notebook nodes, since they aren't ephemeral
                #            # dask can recover from dead workers, but not dead schedulers
                #            - key: "hub.jupyter.org/dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #            - key: "hub.jupyter.org_dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #          nodeSelector:
                #            k8s.dask.org/node-purpose: scheduler
                cores:
                    request: 0.01
                    limit: 1
                memory:
                    request: 128M
                    limit: 1G
            worker:
                extraContainerConfig:
                    securityContext:
                        runAsGroup: 1000
                        runAsUser: 1000
                extraPodConfig:
                    #          serviceAccountName: user-sa
                    securityContext:
                        fsGroup: 1000
        #          tolerations:
        #            - key: "k8s.dask.org/dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #            - key: "k8s.dask.org_dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #          nodeSelector:
        #            # Dask workers get their own pre-emptible pool
        #            k8s.dask.org/node-purpose: worker
        # TODO: figure out a replacement for userLimits.
        extraConfig:
            optionHandler: |
                from dask_gateway_server.options import Options, Integer, Float, String, Mapping
                import string

                # Escape a string to be dns-safe in the same way that KubeSpawner does it.
                # Reference https://github.com/jupyterhub/kubespawner/blob/616f72c4aee26c3d2127c6af6086ec50d6cda383/kubespawner/spawner.py#L1828-L1835
                # Adapted from https://github.com/minrk/escapism to avoid installing the package
                # in the dask-gateway api pod which would have been problematic.
                def escape_string_label_safe(to_escape):
                    safe_chars = set(string.ascii_lowercase + string.digits)
                    escape_char = "-"
                    chars = []
                    for c in to_escape:
                        if c in safe_chars:
                            chars.append(c)
                        else:
                            # escape one character
                            buf = []
                            # UTF-8 uses 1 to 4 bytes per character, depending on the Unicode symbol
                            # so we need to transform each byte to its hex value
                            for byte in c.encode("utf8"):
                                buf.append(escape_char)
                                # %X is the hex value of the byte
                                buf.append('%X' % byte)
                            escaped_hex_char = "".join(buf)
                            chars.append(escaped_hex_char)
                    return u''.join(chars)

                def cluster_options(user):
                    safe_username = escape_string_label_safe(user.name)
                    def option_handler(options):
                        if ":" not in options.image:
                            raise ValueError("When specifying an image you must also provide a tag")
                        scheduler_extra_pod_annotations = {
                            "hub.jupyter.org/username": safe_username,
                            "prometheus.io/scrape": "true",
                            "prometheus.io/port": "8787",
                        }
                        extra_labels = {
                            "hub.jupyter.org/username": safe_username,
                        }
                        return {
                            "worker_cores_limit": options.worker_cores,
                            "worker_cores": options.worker_cores,
                            "worker_memory": "%fG" % options.worker_memory,
                            "image": options.image,
                            "scheduler_extra_pod_annotations": scheduler_extra_pod_annotations,
                            "scheduler_extra_pod_labels": extra_labels,
                            "worker_extra_pod_labels": extra_labels,
                            "environment": options.environment,
                        }
                    return Options(
                        Integer("worker_cores", 4, min=1, label="Worker Cores"),
                        Float("worker_memory", 8, min=1, label="Worker Memory (GiB)"),
                        # The default image is set via DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE env variable
                        String("image", label="Image"),
                        Mapping("environment", {}, label="Environment Variables"),
                        handler=option_handler,
                    )
                c.Backend.cluster_options = cluster_options
            idle: |
                # timeout after 30 minutes of inactivity
                c.KubeClusterConfig.idle_timeout = 1800
        # Users connect to the Gateway through the JupyterHub service.
        prefix: /services/dask-gateway
        auth:
            # Use JupyterHub to authenticate with Dask Gateway
            type: jupyterhub
    traefik:
        #    nodeSelector:
        #      k8s.dask.org/node-purpose: core
        service:
            # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.
            type: ClusterIP
# A placeholder as global values that can be referenced from the same location
# of any chart should be possible to provide, but aren't necessarily provided or
# used.
#global: {}
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ucetgj7k3whaqf9nulacsqarur6nrgzuyt59apeptu5cphd6ksdsqpy5he
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBDNUNGRFZnWnpraE1UKzdV
            VjRVZnp6MzJtYTRGSlFDc1NlemtZVTE2VnhnCjA4T0pPallxcGFzUGdyaldmcEUw
            NmVwVkhmNXN1dHhqQU1Zc25BVXhQTU0KLS0tIGZjWUcvWVVzdDY3ZUlOYzN3ZzJl
            NnZicDUvV3M1Q0xEVFloZjFwMHU5cHMKfYEhlvtpPmWTDHT1E2SmjSgjS+ky/4bm
            HaIK3I/rRlIxEk7WwCvirGRhmzu3gJnM67C/wrm+n7fq5iWssOi/lQ==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1dnkv8vy8xkl5afwuwl55ycpquy2uk7ypc5ad87sfug2zffp6jgkqwwzglr
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBseFpxd3JwR3BtR2hGTWpX
            cnhRVXlRaEl0am5aaW1ocVZGR2x5cU9BZWpJCjlYeFVWaUFuMXdsYVhRUG5kbjZq
            NUVtSDBqQTEydjFoYXpZWGsySlNjR2MKLS0tIDRkb0ZrZ3ZRUVVBcGttNVRCQ2Jl
            V3RBR29vOTlFYk1XYjNyTUlmbnlBemcKWKMCfWW3o8jI2BGm2vJbHPP/YN8dfLRU
            eBBPiO0+NjleZg1WSt9Ll+bCE8k7L2PhF98sgenNVu9UFiKJmgdKqA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1wt75fkqsa2ngrhtmr7ws2ve8v9h2463hryj4jk4k7m5khxmc9pgqgqag8x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBVR1hDQ1dRVnN4eGtqVTFH
            MGNqdzdiblFhajlNM2NTOWtRdEQ5RWVDRUV3CjFmb09DMi9WUFFlQTJ0N1JrRGNv
            NEtKaFYzYUF6U1QrVmVMMkYwcnErSVEKLS0tIFUydXZTMmRLTjBmWGJuTVZMK25o
            TVRhZ2FsbGliazdPUDJYRHR1YXVlRmcKzuXkhlBPPYW2PMB0pk5ha0WAY87RJyC4
            ZtcH6nP6CsFiSdVKQYiTdkV+h5tq94HBWtGCqss02WB8rBV6s4MOAg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1fqw4znyl0zjpw5ta7ll3auxpzg8dme578jgw43a0dtzjhwjn4qlstaez7c
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBwQjhrdTFST09NSDg4a0VJ
            c2xoRDhMU3hCYTFJc1Q2VGFYMVRMNVVoNzNjCnJCWmhxTzd4UHZHYnlLemNieklx
            SCs1YjNhTHFja1lTRytSMlZPWmF0Q1EKLS0tIGgvS004ZWt1Tm5WMTJLalV5N05v
            aStSaW5sUDIvazFpNzhOVnpQRzlzRFkKLSn2uKLoJcTp/+byMyRwH9+80qeQb65v
            +hCAPHLSuY2DvohZ1jykCSuj2ypBxHycMDDtOq7/7iVn20iyjkS4rg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1m2ay7zlek6d4uctt09vsw5l8gpydjlvu9xemv8pqh97urdmhhyrsh9qe86
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBNY1BHL0kxdTVjVllpMXk4
            TTFjbXVGV3VnNUtIbG9xSnF6c2NPUnVWTkM4CkZmR0xVSUhBTjI4Tk50L29OU3FQ
            UDFyN0ZQREx4N2lmTmZucldHZkZhRGMKLS0tIGgyTHdaaTVWeDVUbmYwcm91TGlN
            VlpBc0tVZFRDN1AxRHV3bm8wTmcrOXcKAxzROKjooyECCz0on4Oc9OL6zN+UzQKj
            F78M8ESGqkSuG6+1qiQ99W46a/QxS7Ifa5nr3AJh6g3lu9TcL2jBow==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2023-12-04T21:04:28Z"
    mac: ENC[AES256_GCM,data:zGEtT1eoir937wGvHjPRId0HA3gyOLTK47SKOHBZHZV+zLMLtxmefDlF1GpUN+iYk+JapVeLC0vw6BnxkvAfcICtju26IASmmLvmfwkdXGKH31ZYaIdrY/wItJh8Pzuw/6PhcA0leVJY+tzBIt7jc+pDHbOnCtVGDaPPCXN/ytw=,iv:MirNiciw4oaaXgPdTuaHxxRViecBLhqDPa7bfaC6A8k=,tag:gtYy1F2UmLtlpAKvwPKT0A==,type:str]
    pgp: []
    encrypted_regex: ^(client_id|client_secret|secretToken|admin_users|oauth_callback_url|allowed_organizations|extraVolumes|extraVolumeMounts|hosts|secretName)$
    version: 3.8.1
