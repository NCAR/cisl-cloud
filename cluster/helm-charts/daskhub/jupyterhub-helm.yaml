# With a Kubernetes cluster available and HELM installed, this HELM values
# file will install JupyterHub in the Kubernetes cluster. It is also assumed
# that you have helm and kubectl installed and configured on your workstation.
# This HELM values file will require modifications which are found and 
# described by searching for 'MODS'
# Use this file as a values.yaml reference when installing the zero2jupyterhub helm chart
# following the documentation : https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html#install-jupyterhub
jupyterhub:
    hub:
        config:
            JupyterHub:
                # <MODS> You will need to configure your authentication below. Below is currently
                # a template for Github auth and you need to fill out client_id, client_secret
                # and adjust the oauth_callback_url. This info can be generated within Developer settings
                # in Github via OAuth Apps using that oauth_callback_url you define.
                # Here is a reference to other auth ways:
                # https://jupyterhub.readthedocs.io/en/stable/tutorial/getting-started/authenticators-users-basics.html
                # </MODS>
                authenticator_class: github
            GitHubOAuthenticator:
                client_id: ENC[AES256_GCM,data:bA5308B/EgxLCvgUFEq/O15QzyY=,iv:QYKsszGpBFvZchZQAeC5zbHZgU/PrFpxO/UUXD5CnVE=,tag:AjsdDcG3XjYfOnl9aEaV8g==,type:str]
                client_secret: ENC[AES256_GCM,data:yJnGHsLGzwz1uf25C/5zNIJ8fTSWHaIAs905vYhe5SBCUb3msJBRIg==,iv:NUsRdAUsQjIRsiAJ8vcq28wgWeFHkCvT73dCVRd/Jgw=,tag:TWGsOM4j2aQvM2CvxlNh9A==,type:str]
                oauth_callback_url: ENC[AES256_GCM,data:JIgWvXcqFyYVrVe27tWhP1eSc9ultQVzBb8k7D8+PqI7hXzNlsQkDRHKOKdzp/o=,iv:/dN18+yEKbozSBLippiCApeARFUf7QiEQniq2wfN144=,tag:/CKJbZ5TxVR0wjjzF3KADg==,type:str]
                allowed_organizations:
                    - ENC[AES256_GCM,data:LOn9/x7xTqlmK+4xLHNY/kK0Wptk,iv:3nmQ6cPQicCnAZ9A9UAwaFzuVAr96BbgR+OWMUP2viA=,tag:bAJ/RxRXPLvn1o0zoltVMA==,type:str]
                scope:
                    - read:org
            Authenticator:
                # <MODS> adjust the admin_users if needed. These use Github usernames </MODS>
                admin_users:
                    - ENC[AES256_GCM,data:i2wmc4vZrpmAFSPntPg3+AgyNw+IciCxpYmqAqqrVQ==,iv:IQWFPaHDi5LsiiFyD/U4Rha4eviNT3Jqlbz6WBoT31Y=,tag:yHAq6eZK75S8XcZbhcwLuQ==,type:comment]
                    - ENC[AES256_GCM,data:jZFYSph0wISVYQ==,iv:f/BmsZOesaNmigV2G30wjwLnsJQjteK6dknEm/xrXPM=,tag:ju5fttPQ7hWyoNSGZyAMgQ==,type:str]
                    - ENC[AES256_GCM,data:1XX3wR1p4YDC+o8tB00wWfalqQqnJ4DB48VR2zPqNDGM35yR,iv:pAQ6Hpfn+VFr/zO+xXKsGjD8C6NFGKRLFKBwiZrskKs=,tag:cy9mj93Ymchb5QzXru5jdg==,type:comment]
                    - ENC[AES256_GCM,data:kb273rDuDim1Ja9w,iv:vW5v6MUkHRNH5mV3SiIhPbDawgflffZILu2t0GMYrC4=,tag:+zCCwOco9mTebeMaV41VSA==,type:str]
                    - ENC[AES256_GCM,data:rEEVdXFIZWqh34bZW2XoSyWC2S8uZuio7cuXvMjXZk8Ad291JDUz7A==,iv:8G3hF+IWIOrMENMeSPj6DinLV+FB+hmVdT6MiBCA5EM=,tag:CchbTuQvTnUDO4f6srl6mQ==,type:comment]
                    - ENC[AES256_GCM,data:HUXint7/lgKm,iv:7bO8n2gr/zYNh1NvTbnzasMmSd41zh1oBkr9UjehGoc=,tag:KnzyFaPqS3AWC4qvcn0IAw==,type:str]
                    - ENC[AES256_GCM,data:/KU4wNCBQInJl8ogjvR+o8tBvWSov6S1yukJqJV5b0hPLg==,iv:Fq7VlJZXxd07QBHmlHLKHbxG5HQD0DsE5CKUGwg3j90=,tag:lNhJoVHwP09N/OOiOFSf2w==,type:comment]
                    - ENC[AES256_GCM,data:3/d08Qg/aKSSowadvGc=,iv:ekIruXDpzpZpSN+DEzXXdLokNetkt5OdwaKRMuXGCI0=,tag:QWriBoaC+Q90r9hnUEGzRw==,type:str]
        networkPolicy:
            egress:
                - ports:
                    - port: 6443
                - to:
                    - podSelector:
                        matchLabels:
                            app.kubernetes.io/name: dask-gateway
                  ports:
                    - port: 8000
    proxy:
        # <MODS> Make sure you fill in a secretToken. Run: 'openssl rand -hex 32'
        # on your local workstation to get that value. </MODS>
        secretToken: ENC[AES256_GCM,data:1b723QzUB8IYumCvQbO8mqIGm3m7jdFbZwSBCS5PAoxNcsLzbfkhrJlyIAByTdrxA+d0sc/irE/Vr7vrPCaRDg==,iv:Ny9PEJ79sRfzzhN9KoSkPfEe/NvyBkE2BIUNVva0s0k=,tag:Pu/K5hZVtv62wq6D/JDbPA==,type:str]
        service:
            type: ClusterIP
        chp:
            networkPolicy:
                egress:
                    - to:
                        - podSelector:
                            matchLabels:
                                app.kubernetes.io/name: dask-gateway
                      ports:
                        - port: 8000
    singleuser:
        networkPolicy:
            egress:
                - to:
                    - podSelector:
                        matchLabels:
                            app.kubernetes.io/name: dask-gateway
                  ports:
                    - port: 8000
        extraEnv:
            # About DASK_ prefixed variables we set:
            #
            # 1. k8s native variable expansion is applied with $(MY_ENV) syntax. The
            #    order variables are defined matters though and we are under the
            #    mercy of how KubeSpawner renders our passed dictionaries.
            #
            # 2. Dask loads local YAML config.
            #
            # 3. Dask loads environment variables prefixed DASK_.
            #    - DASK_ is stripped
            #    - Capitalization is ignored
            #    - Double underscore means a nested configuration
            #    - `ast.literal_eval` is used to parse values
            #
            # 4. dask-gateway and dask-distributed looks at its config and expands
            #    expressions in {} again, sometimes only with the environment
            #    variables as context but sometimes also with additional variables.
            #
            # References:
            # - K8s expansion:     https://kubernetes.io/docs/tasks/inject-data-application/define-interdependent-environment-variables/
            # - KubeSpawner issue: https://github.com/jupyterhub/kubespawner/issues/491
            # - Dask config:       https://docs.dask.org/en/latest/configuration.html
            # - Exploration issue: https://github.com/2i2c-org/infrastructure/issues/442
            #
            # DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE makes the default worker image
            # match the singleuser image.
            DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: '{{JUPYTER_IMAGE_SPEC}}'
            # DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT makes some environment
            # variables be copied over to the worker nodes from the user nodes.
            DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT: '{{"SCRATCH_BUCKET": "$(SCRATCH_BUCKET)", "PANGEO_SCRATCH": "$(PANGEO_SCRATCH)"}}'
            # DASK_DISTRIBUTED__DASHBOARD__LINK makes the suggested link to the
            # dashboard account for the /user/<username>/<server-name> prefix in the path.
            # JUPYTERHUB_SERVICE_PREFIX has leading and trailing slashes as appropriate
            DASK_DISTRIBUTED__DASHBOARD__LINK: '{{JUPYTERHUB_SERVICE_PREFIX}}proxy/{{port}}/status'
        storage:
            extraVolumes:
                - name: ENC[AES256_GCM,data:HYVlJAzsetMxnA==,iv:4YdTWOECzTLf+Cq/RwjPNjH2nlr9FboNLROJSVLZZJ8=,tag:S2Jc5muOHgBSI86eYg99EQ==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:pRmTrZ/nN2YLAApABJkVTKdyWxlK8Q==,iv:ID1rCcSlsDZJU/Oj3misbwk1VmdXTCMlM4wwBAlgwTg=,tag:4xhLAbkAZdmskzMDLDZhrA==,type:str]
                    path: ENC[AES256_GCM,data:vMwL0AqwT7Pig5BRN6ACz7d/0F367JpkOlb8UCkx8A==,iv:fbyDVdujTzvaUgcufsoI6VaKe7S1mk+LObyjPiJ+rUM=,tag:u0SBNaadaep5fHSikaHq8g==,type:str]
                - name: ENC[AES256_GCM,data:Lbwj31NrWFk=,iv:ZAOZbgmVa1E2ju6atKKGVCd45Vh1kCgMhJsOrJ5xQCg=,tag:cTeemRA7y4SZJbmTNuBaiw==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:swvHGt1RzEyc/xbrmqNq6R0=,iv:ejPalJ3ftOKXkVpy/YFlnn1DYz9PI8se55Lbkkhx3zA=,tag:XKs0DO195Mm+sZRJm08DMQ==,type:str]
                    path: ENC[AES256_GCM,data:pm2a7o0l+Yk9J64=,iv:SOhOC/gEutEFjEIBttAojc22sMw7PfviYh11AredWB0=,tag:+QJqzFoxf7raAAFEWtVnVw==,type:str]
            extraVolumeMounts:
                - name: ENC[AES256_GCM,data:c/m3CYV6DuXcIQ==,iv:b1iZxUKNBmW81KtTVB+QzQ8XEwlDNCELmrM26dgzhko=,tag:+/ntFkkHuo8mjYeh90JTrQ==,type:str]
                  mountPath: ENC[AES256_GCM,data:9JkUh4pYaCOk+e4eQq03LFV1Gg==,iv:y7DhuFIqolNBojyvVIGbavYJJrppsQ4rTEuDIeo45PE=,tag:U9Nt0G7M3sA60BqnHadZKw==,type:str]
                  readOnly: ENC[AES256_GCM,data:Ylul8A==,iv:NMgXgqK8wtH/V4VZ55Ks+9/TdEpWCMEB6et3GJp/+Yc=,tag:c5gGrmxyNmBt/gPnuJGWFw==,type:bool]
                - name: ENC[AES256_GCM,data:r0qxBETIvNk=,iv:htuvufALTz2uuSVicZndSIdv3+h5QvBLt3Nu55krmIQ=,tag:tqGvkC0aduzvpPI8hWLFFg==,type:str]
                  mountPath: ENC[AES256_GCM,data:JoqmgtbUXCPrrftlbjYA,iv:4HK3chnDUlGBO5VvaPLofJSiAGZn2yCI0Lo9r54X24E=,tag:o06Lk+xSFZoznMuBiOpaUQ==,type:str]
                  readOnly: ENC[AES256_GCM,data:7kvr4g==,iv:UDmnAJj9GJrTkq3x5EEtR4cmp+GMNOks6c01wVF9gug=,tag:i36e1SKtIoaly/pErz5SXQ==,type:bool]
        image:
            # image choice preliminary and is expected to be setup via
            # https://ncar-cisl.2i2c.cloud/services/configurator/ by the community
            #
            # pangeo/pangeo-notebook is maintained at: https://github.com/pangeo-data/pangeo-docker-images
            name: pangeo/pangeo-notebook
            tag: 2023.05.18
        profileList:
            # NOTE: About node sharing
            #
            #       CPU/Memory requests/limits are actively considered still. This
            #       profile list is setup to involve node sharing as considered in
            #       https://github.com/2i2c-org/infrastructure/issues/2121.
            #
            #       - Memory requests are different from the description, based on:
            #         whats found to remain allocate in k8s, subtracting 1GiB
            #         overhead for misc system pods, and transitioning from GB in
            #         description to GiB in mem_guarantee.
            #       - CPU requests are lower than the description, with a factor of
            #         10%.
            #
            - display_name: NSF NCAR CPU Notebook
              description: Start a container with the chosen specifications
              slug: ncarcpu
              default: true
              profile_options:
                requests:
                    # NOTE: Node share choices are in active development, see comment
                    #       next to profileList: above.
                    display_name: Resource Selection
                    choices:
                        mem_1:
                            default: true
                            display_name: ~1 GB, ~0.125 CPU
                            kubespawner_override:
                                mem_guarantee: 0.904G
                                cpu_guarantee: 0.013
                        mem_4:
                            display_name: ~4 GB, ~0.5 CPU
                            kubespawner_override:
                                mem_guarantee: 1.809G
                                cpu_guarantee: 0.025
                        mem_16:
                            display_name: ~16 GB, ~2.0 CPU
                            kubespawner_override:
                                mem_guarantee: 14.469G
                                cpu_guarantee: 0.5
              kubespawner_override:
                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-base:2023-12-27.01
                imagePullSecrets:
                    - harbor-registry-secret
                cpu_limit: null
                mem_limit: null
            - display_name: NSF NCAR GPU Notebooks
              slug: ncargpu
              description: Start a container with access to GPU hardware
              profile_options:
                image:
                    display_name: Image
                    choices:
                        ncartensor:
                            display_name: NCAR Tensorflow ML Notebook
                            slug: ncartensor
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-tf:2023-12-27.01
                                imagePullSecrets:
                                    - harbor-registry-secret
                        ncarpytorch:
                            display_name: NCAR Pytorch ML Notebook
                            slug: ncarpytorch
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-pyt:2023-12-27.01
                                imagePullSecrets:
                                    - harbor-registry-secret
              kubespawner_override:
                mem_limit: null
                mem_guarantee: 14G
                environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
                extra_pod_config:
                    runtimeClassName: nvidia
                extra_resource_limits:
                    nvidia.com/gpu: "1"
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 600m
            nginx.org/client-max-body-size: 10m
            nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/secure-backends: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/websocket-services: proxy-public
            nginx.org/websocket-services: proxy-public
            cert-manager.io/cluster-issuer: incommon
        ingressClassName: nginx
        # <MODS> Adjust the hosts entries in this next session.
        hosts:
            - ENC[AES256_GCM,data:vzI6eqaM2iIaZ6LWuegLrsYi1vc=,iv:MDou0BuYyyQdu99GptJCfwDOtZWsgrvtBlRLC5xCx4I=,tag:8bwDwjlwRN2xFlPGLj4CvA==,type:str]
        tls:
            - hosts:
                - ENC[AES256_GCM,data:Az+aBZTxNwDHrivkZYeAVcuUw+I=,iv:7eTyuKkRPSyw8oExZfV2X/tCcD4MDB9Ot2hr/koaSmA=,tag:eTg6dPGGuStVSVJII0Bh8A==,type:str]
              secretName: ENC[AES256_GCM,data:7A6BcDVwMYzPDwMMWli/eQxgnw==,iv:ZULwF7YUSbNnJ93DzMc9bOz5jQBIWHuSEs2D1GHxE7o=,tag:5CGWTQoo/p4WoNfdgVIqGA==,type:str]
              # </MODS>
dask-gateway:
    # Enabling dask-gateway will install Dask Gateway as a dependency.
    enabled: true
    # Futher Dask Gateway configuration goes here
    # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
    gateway:
        backend:
            scheduler:
                extraPodConfig: null
                #          serviceAccountName: user-sa
                #          tolerations:
                #            # Let's put schedulers on notebook nodes, since they aren't ephemeral
                #            # dask can recover from dead workers, but not dead schedulers
                #            - key: "hub.jupyter.org/dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #            - key: "hub.jupyter.org_dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #          nodeSelector:
                #            k8s.dask.org/node-purpose: scheduler
                cores:
                    request: 0.01
                    limit: 1
                memory:
                    request: 128M
                    limit: 1G
            worker:
                extraContainerConfig:
                    securityContext:
                        runAsGroup: 1000
                        runAsUser: 1000
                extraPodConfig:
                    #          serviceAccountName: user-sa
                    securityContext:
                        fsGroup: 1000
        #          tolerations:
        #            - key: "k8s.dask.org/dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #            - key: "k8s.dask.org_dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #          nodeSelector:
        #            # Dask workers get their own pre-emptible pool
        #            k8s.dask.org/node-purpose: worker
        # TODO: figure out a replacement for userLimits.
        extraConfig:
            optionHandler: |
                from dask_gateway_server.options import Options, Integer, Float, String, Mapping
                import string

                # Escape a string to be dns-safe in the same way that KubeSpawner does it.
                # Reference https://github.com/jupyterhub/kubespawner/blob/616f72c4aee26c3d2127c6af6086ec50d6cda383/kubespawner/spawner.py#L1828-L1835
                # Adapted from https://github.com/minrk/escapism to avoid installing the package
                # in the dask-gateway api pod which would have been problematic.
                def escape_string_label_safe(to_escape):
                    safe_chars = set(string.ascii_lowercase + string.digits)
                    escape_char = "-"
                    chars = []
                    for c in to_escape:
                        if c in safe_chars:
                            chars.append(c)
                        else:
                            # escape one character
                            buf = []
                            # UTF-8 uses 1 to 4 bytes per character, depending on the Unicode symbol
                            # so we need to transform each byte to its hex value
                            for byte in c.encode("utf8"):
                                buf.append(escape_char)
                                # %X is the hex value of the byte
                                buf.append('%X' % byte)
                            escaped_hex_char = "".join(buf)
                            chars.append(escaped_hex_char)
                    return u''.join(chars)

                def cluster_options(user):
                    safe_username = escape_string_label_safe(user.name)
                    def option_handler(options):
                        if ":" not in options.image:
                            raise ValueError("When specifying an image you must also provide a tag")
                        scheduler_extra_pod_annotations = {
                            "hub.jupyter.org/username": safe_username,
                            "prometheus.io/scrape": "true",
                            "prometheus.io/port": "8787",
                        }
                        extra_labels = {
                            "hub.jupyter.org/username": safe_username,
                        }
                        return {
                            "worker_cores_limit": options.worker_cores,
                            "worker_cores": options.worker_cores,
                            "worker_memory": "%fG" % options.worker_memory,
                            "image": options.image,
                            "scheduler_extra_pod_annotations": scheduler_extra_pod_annotations,
                            "scheduler_extra_pod_labels": extra_labels,
                            "worker_extra_pod_labels": extra_labels,
                            "environment": options.environment,
                        }
                    return Options(
                        Integer("worker_cores", 4, min=1, label="Worker Cores"),
                        Float("worker_memory", 8, min=1, label="Worker Memory (GiB)"),
                        # The default image is set via DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE env variable
                        String("image", label="Image"),
                        Mapping("environment", {}, label="Environment Variables"),
                        handler=option_handler,
                    )
                c.Backend.cluster_options = cluster_options
            idle: |
                # timeout after 30 minutes of inactivity
                c.KubeClusterConfig.idle_timeout = 1800
        # Users connect to the Gateway through the JupyterHub service.
        prefix: /services/dask-gateway
        auth:
            # Use JupyterHub to authenticate with Dask Gateway
            type: jupyterhub
    traefik:
        #    nodeSelector:
        #      k8s.dask.org/node-purpose: core
        service:
            # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.
            type: ClusterIP
# A placeholder as global values that can be referenced from the same location
# of any chart should be possible to provide, but aren't necessarily provided or
# used.
#global: {}
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ucetgj7k3whaqf9nulacsqarur6nrgzuyt59apeptu5cphd6ksdsqpy5he
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBpU1FOaFNHYWxDQVdFNWZP
            blpIQXpVYXpiYXB0Y3VkQ0JsZXdVT3BSakNNCmtXZXdqQjJOOW5UbW9iZGExb1VE
            MXZvVjFtR3E4TzdxcG5HTnhRZW9BcjgKLS0tIDZvbzZOUXBuZnJGY2FHak9CQUhi
            dDUzQTFXdUpXMDNINjBrWXQ2VDJhTWcKmAWMvYNUw28OFBFrrnknqqesui8+R6OB
            EBRbc8zA2MBaYeJnDu5c6OxazyUt8oO+sHojCaAX7nz0T5IcXA933w==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1dnkv8vy8xkl5afwuwl55ycpquy2uk7ypc5ad87sfug2zffp6jgkqwwzglr
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBUZWZPeVlTZk10RXBxcW1u
            NU82ZlRKWDZqbGdKb00vaHppTzVXU25EM2hVCjh1VWRHR0drcGZqaXJLazdsclJv
            V0N3MjlhVWFXcVlsaUl2Y1JNL1NwQlUKLS0tIHZDUnVjbHZ6cWs2NVc4YjV6eVB0
            MllhR2xXZWxPZW82MkxSVlg2dGZvUFEKR+qjRagG0SB96+rnEHh9AaZCfa2eAoBR
            aWFiVVEYpx/Gp5TorTPgbVQMQuhPk9p1hyX58Ic5Q6Lnfg2lU4aR6g==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1wt75fkqsa2ngrhtmr7ws2ve8v9h2463hryj4jk4k7m5khxmc9pgqgqag8x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB5K0VCN2NqU0c4RzJ4ZnY1
            YVpXZ2FDVFBKK1pYS0JNSTFyR1RYQ1p5T0hZCmQ1VU5YMUk0MVR1NlkrU29SRkZK
            V0s2Ly9LamVuQklMb2d5cUU0b09lV3MKLS0tIDRCZHVxOFo1eXkzU1JIQm95emlp
            ZVdBMzRpOFI3WGFtVTl2UzNWaWxrbWcKI+uHiHAZ6AG9Rtb2BwRT+qaPsbsnUUuS
            hDkR9V5Baj4wfVw9glEKw42lzXJEbz8ibzDQUew+fPTv3a/9OocjFg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1fqw4znyl0zjpw5ta7ll3auxpzg8dme578jgw43a0dtzjhwjn4qlstaez7c
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBwWnZ2YVhwVjRySGxoYXNt
            cFhOSDVEUUtYamg0TThjL0dZRkkxMjREb0dZClY4Z0JzN3hubjNWVFViZjNoWmM2
            RU4zSi93TTdsRWVXZXAyTDVjZ01TK0EKLS0tIDJUQ092OHBoeFViSC9lNGdKUHN1
            bWxkOENDaFo5dzJIQVp6K0tSejIzTTQKlyPLilfv9cmi4xyxiVHc19IJP1/VxM0B
            C3nC4PszeEC4KN0WvadzaxjF+s/9l5YWA31G/tU9CJecxMXaEIsVPA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1m2ay7zlek6d4uctt09vsw5l8gpydjlvu9xemv8pqh97urdmhhyrsh9qe86
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBVd3h2dGRSSEtjVFc2SnpX
            alpxTXZnYUphSnhaWW15QTZxWU1tbzBNOHd3ClhOR0plRjVXNjJWcFAyOFFQdlh5
            RWRNdFBra2F6QUFkSEo4YTdZVVlibk0KLS0tIEhTTThicGk4dGVSUzQ4RjlTVmtE
            djBYNHRBdnI5THpPdEpKTlRyaXh4YUkKbHXIr+FhCxGBpamoS1PdXg9SwRQTYANN
            0vZeSmA/AHvyyf/eXGJJm666Xn14+vyTnWczZZNtRprMA0LqXOdCpQ==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-03-18T17:43:54Z"
    mac: ENC[AES256_GCM,data:v2hl2bdAcLYU6erpC2q8w9XbzIPgDZ4PKYftMAJbtEUGc1GCjG28rl6z2cDAeYMm+BK84hWtx1324UzYY9Cd/fTZnu5v32Z4GeThKxDifVeQ3xRvpG4oboXXLDDlXz04+3CB8hXb0YAWIOI8d6uVtJcLCr8IaG7X6E6Gglbsvmg=,iv:izA4ZfCGgXftg9wqRIgVlpu0YOVb5r4rismrG+kTpsI=,tag:wO4g6QvlMftQVAgGigF8OQ==,type:str]
    pgp: []
    encrypted_regex: ^(client_id|client_secret|secretToken|admin_users|oauth_callback_url|allowed_organizations|extraVolumes|extraVolumeMounts|hosts|secretName)$
    version: 3.8.1
