# With a Kubernetes cluster available and HELM installed, this HELM values
# file will install JupyterHub in the Kubernetes cluster. It is also assumed
# that you have helm and kubectl installed and configured on your workstation.
# This HELM values file will require modifications which are found and 
# described by searching for 'MODS'
# Use this file as a values.yaml reference when installing the zero2jupyterhub helm chart
# following the documentation : https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html#install-jupyterhub
jupyterhub:
    hub:
        config:
            JupyterHub:
                # <MODS> You will need to configure your authentication below. Below is currently
                # a template for Github auth and you need to fill out client_id, client_secret
                # and adjust the oauth_callback_url. This info can be generated within Developer settings
                # in Github via OAuth Apps using that oauth_callback_url you define.
                # Here is a reference to other auth ways:
                # https://jupyterhub.readthedocs.io/en/stable/tutorial/getting-started/authenticators-users-basics.html
                # </MODS>
                authenticator_class: github
            GitHubOAuthenticator:
                client_id: ENC[AES256_GCM,data:HHix3U5KI1gBo0wvZZQcfmj1aWw=,iv:njrC3c/8uhLXaEZiYbLEJFn53QScwYKw9t1Hq0Tt7ho=,tag:msWNk6USE5o7G2UTgJMITw==,type:str]
                client_secret: ENC[AES256_GCM,data:RkfiHSOzUU3wQhfbVtVnDACyXYlQ4OKdKQhQDjndfe1ODc1/IZ546g==,iv:swRrFH0y4oAVqT3eQo7OL90SzuFciYjssaVzEQfPvDM=,tag:4+MKrcjSQUPF/azzSJdiTA==,type:str]
                oauth_callback_url: ENC[AES256_GCM,data:laewQQHtLzJKArC4VcSe4aWag9tp68aVICj7eiqqTG/AqByRl7ljLod0qSVvL18=,iv:1El8pORGcV0Uv1KdjIeuCPC5Wg0zZo6EozAMOPWeRXg=,tag:m7zFhV0fDqZAv20ZZJvROA==,type:str]
                allowed_organizations:
                    - ENC[AES256_GCM,data:BG44LzFSjiswimSsvSZ6ogwkOVf7,iv:g4FhCVRFR+LOL+9UdUWgKYgj7jhnVim9o3BlDz9I9IU=,tag:cW1zMbmkmo4Yz3LGEUQQcA==,type:str]
                scope:
                    - read:org
            Authenticator:
                # <MODS> adjust the admin_users if needed. These use Github usernames </MODS>
                admin_users:
                    - ENC[AES256_GCM,data:g/LCnp7O77xd39qi1JGZoZJuMaC5Ixv2uE2twCRlTw==,iv:7SQyqJWGskJeJ6Pb3NyjrLe1TDAtHeYieFBLj/mS9+0=,tag:0FM93fq85ViKLyZuo54WwA==,type:comment]
                    - ENC[AES256_GCM,data:qyrZzdmL85Qc/Q==,iv:6QmnUr3VCnP0j3jnqBd8FYz/g3uVbPC8mXhWxfWJ5CQ=,tag:e57mnq7peZ+eINF8mzMBfw==,type:str]
                    - ENC[AES256_GCM,data:3YKLm9UK9E/MENGjGeuQNb7q5SY0UqnDm+LrEjdZRgA/kP65,iv:Z1PsjAoADIjmg0yQuzxwKeehQT30ng3dMXjHyj+WenQ=,tag:AuL8nNdOEXPibUD8MTIk9Q==,type:comment]
                    - ENC[AES256_GCM,data:32ctip2+qn4jXsHY,iv:C6kZTpvwiiipZin/EQ3rmW1RYAkUeWf+PXQUcNuVx2Q=,tag:Zi/gqd606IAOdf1D2Lo/GQ==,type:str]
                    - ENC[AES256_GCM,data:QZyGKJqunGPCkyWAx/lrV8/CWMkiCObVNAfPO0AQi3Ij7CTwunf71g==,iv:CiSleFVwxB8MoRwcbZryxWmuOxTIzqiKNGnc9oaFEIQ=,tag:m92SyXfzhsvfTk2EZcsMTg==,type:comment]
                    - ENC[AES256_GCM,data:JP5zoEdXOjIK,iv:Jpx6xlNBmBkRsPfVd6xQsFXAOMCdG8IobdNfISHyPvQ=,tag:RcmwBrmnQ/jvlZ0CfDG22w==,type:str]
                    - ENC[AES256_GCM,data:2qilt3l0IHPrSF9YkCMtM3xymDkaoPHrsg5G/MqZh7ueeQ==,iv:6ez0URru3X3bQzTWMLuodJQ7o3sJ5gUh6l+0AZbZD9E=,tag:0PGjoIV5BnxoYjz2d9TOLQ==,type:comment]
                    - ENC[AES256_GCM,data:KW1iy3CiMYEIRMJpUP0=,iv:YeQLmMnvLeCDGtmYsXHfyAZDy1y/Ud8qIuUWiyDLWOw=,tag:hpKhc1+rAIpfz7TGMg2k0A==,type:str]
    proxy:
        # <MODS> Make sure you fill in a secretToken. Run: 'openssl rand -hex 32'
        # on your local workstation to get that value. </MODS>
        secretToken: ENC[AES256_GCM,data:v51ZcJ6dVW6OBNo3z/NAF7RgUtM+boWK04uFcUeM/4e7WjRvWrIedqjoPuF2yBygja7f8+QqCbaqsc/62iSudw==,iv:YtKqKtoEfXM3+A8WPQCXOE7mTbNhJMhmmoUTnSIsDCI=,tag:xgHlIefEHzUDhGX5YAWcMQ==,type:str]
        service:
            type: ClusterIP
    singleuser:
        extraEnv:
            # About DASK_ prefixed variables we set:
            #
            # 1. k8s native variable expansion is applied with $(MY_ENV) syntax. The
            #    order variables are defined matters though and we are under the
            #    mercy of how KubeSpawner renders our passed dictionaries.
            #
            # 2. Dask loads local YAML config.
            #
            # 3. Dask loads environment variables prefixed DASK_.
            #    - DASK_ is stripped
            #    - Capitalization is ignored
            #    - Double underscore means a nested configuration
            #    - `ast.literal_eval` is used to parse values
            #
            # 4. dask-gateway and dask-distributed looks at its config and expands
            #    expressions in {} again, sometimes only with the environment
            #    variables as context but sometimes also with additional variables.
            #
            # References:
            # - K8s expansion:     https://kubernetes.io/docs/tasks/inject-data-application/define-interdependent-environment-variables/
            # - KubeSpawner issue: https://github.com/jupyterhub/kubespawner/issues/491
            # - Dask config:       https://docs.dask.org/en/latest/configuration.html
            # - Exploration issue: https://github.com/2i2c-org/infrastructure/issues/442
            #
            # DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE makes the default worker image
            # match the singleuser image.
            DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: $(JUPYTER_IMAGE_SPEC)
            # DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT makes some environment
            # variables be copied over to the worker nodes from the user nodes.
            #DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT: '$"SCRATCH_BUCKET": "$(SCRATCH_BUCKET)", "PANGEO_SCRATCH": "$(PANGEO_SCRATCH)"'
            # DASK_DISTRIBUTED__DASHBOARD__LINK makes the suggested link to the
            # dashboard account for the /user/<username>/<server-name> prefix in the path.
            # JUPYTERHUB_SERVICE_PREFIX has leading and trailing slashes as appropriate
            DASK_DISTRIBUTED__DASHBOARD__LINK: $(JUPYTERHUB_SERVICE_PREFIX)proxy/{port}/status
        storage:
            extraVolumes:
                - name: ENC[AES256_GCM,data:u5bZeOEm3ILlNw==,iv:H0ZYE5qGGI3DnYr8QWLhc8RpoTsSD2srOOAgY7o11Xw=,tag:ua53BU7s1nTsaZgV3CZg6g==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:idgkuu6D5lV/mbeqgryhFrN24e41tw==,iv:zJOLLc7bFNoJrVVSzG+rShCxNTj0/WVSvq9uc2ngmTU=,tag:Yyk5dsEtX91LrtGMNNxZKg==,type:str]
                    path: ENC[AES256_GCM,data:pZhtJ/hNC6JjGE40ANbqSh+w/teYz1Myd5GT0ciJvg==,iv:tMSX7l9b/ydsKF3lzPkG7OMf1fp2h0tAMEh6BYLoV/w=,tag:Yje85OVFg0yF+xXihEK1Mw==,type:str]
                - name: ENC[AES256_GCM,data:5YjdQDqpiRs+ryDgusf3n8w=,iv:BXrEQS9bZbhH1PMIPY8aZFeLQRE/NvpRB5Ku26ObBSk=,tag:hfLiTJlFAq059k4kmZmyqA==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:iZ2CF6pFRzpha68Cx+Oj8eM=,iv:UfKKaBWrXdWW7QKHv0AjebvhYd8+uKfkbdmHfl5AkWw=,tag:0P22jLkds1IdGbebmZ5eHw==,type:str]
                    path: ENC[AES256_GCM,data:Bhrxdf57B0nu61bKz8rmSlHNLfxl,iv:Ns0Wmh2ngDdN65bbM85TDdmMdLojKcVmwRDavCJwoQU=,tag:4lWoxvflzIde4+dTUPln8A==,type:str]
                - name: ENC[AES256_GCM,data:Px4iKs07y5c=,iv:Nvsx/FxFTYNy8o+uuw4/96MjdGDTbp/Pv3rKxVStezw=,tag:Rs/iTUs/xL9eYQnUoJA/vg==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:bVgkkph259rM9mWhUohF2P0=,iv:TJCPIRxezSsVc8Os7/zM/5iK1ln7CmTO5hH87XNkdZk=,tag:VsY+kBhT9IlR9dB3/UDHZA==,type:str]
                    path: ENC[AES256_GCM,data:Fhd74vcm/VQigUo=,iv:i8emqEBT295J960YFdjdo7nxNgk5MxXZv+wT13dJCS0=,tag:RVi1KLKWwStbpz99WvW0ig==,type:str]
            extraVolumeMounts:
                - name: ENC[AES256_GCM,data:FFp6yHEM6H0f/Q==,iv:Ef/UYPIV6FChBb2g5pjIzeuJ8Dj75qYZZxDGziPfpGI=,tag:OFxBwwmDPVwbtj5+gxz9eQ==,type:str]
                  mountPath: ENC[AES256_GCM,data:kse8PMGlSfovIM4QVzlJjGUnqA==,iv:Uo3dH6qs95U2p9YWFVtIJVHg+X9H1w7mnFgGT5tjf9c=,tag:qWFeD4x8A+CRpue3+wtZ3Q==,type:str]
                  readOnly: ENC[AES256_GCM,data:xPIUug==,iv:84/Wr4niA/PPD8/KvDRpwpo5xbibMAgJ/uI1UOsLeow=,tag:m3AZV0QQM3EVdxEpWzrURw==,type:bool]
                - name: ENC[AES256_GCM,data:TXY9HU1xlsVXwxYE1o5Iw8U=,iv:ARCvcwX7v/LZigj4wnBz1l7zADr6hbQxMGJr4iphSvA=,tag:ErlkCCbKGmTV277jZMVTZw==,type:str]
                  mountPath: ENC[AES256_GCM,data:XeaQ3SHYBEvj+y0qcelZ5i9O,iv:47DGxIpYY4KfExdQO/Q83NJLOJK8ueI4bhD3I4Ls0JE=,tag:SRvWEHSRNu7ookS3Ft1nRw==,type:str]
                  readOnly: ENC[AES256_GCM,data:iEsU7Q==,iv:b4ktPUtY+iNRRT200oVy76Rh5vI2bvwMG6dHAebSQBQ=,tag:gmfBhsyNGtiwVwWdxHDANA==,type:bool]
                - name: ENC[AES256_GCM,data:Qifd2RY07oo=,iv:DD04vuHKXFAtiFBA+ekep+ZMKhT5SgPJld/XlqbBaow=,tag:prYS3CKSQqxTMoJefo8Ylw==,type:str]
                  mountPath: ENC[AES256_GCM,data:0FFLJ/44fdO5tV9MjnpL,iv:Wio6bNBI/LmCCXomrd8XDgoX6gcKpxAWovl5190PFO4=,tag:mOllWuHoMfXBEJebROK6aw==,type:str]
                  readOnly: ENC[AES256_GCM,data:YMXsDw==,iv:namTru6zmGAHuoezc5tRnJkQzSywi7k3LdewQGJbqyc=,tag:Z5bw4dBFKwdvFXD/C4v8/Q==,type:bool]
        image:
            # image choice preliminary and is expected to be setup via
            # https://ncar-cisl.2i2c.cloud/services/configurator/ by the community
            #
            # pangeo/pangeo-notebook is maintained at: https://github.com/pangeo-data/pangeo-docker-images
            name: pangeo/pangeo-notebook
            tag: 2023.05.18
        profileList:
            # NOTE: About node sharing
            #
            #       CPU/Memory requests/limits are actively considered still. This
            #       profile list is setup to involve node sharing as considered in
            #       https://github.com/2i2c-org/infrastructure/issues/2121.
            #
            #       - Memory requests are different from the description, based on:
            #         whats found to remain allocate in k8s, subtracting 1GiB
            #         overhead for misc system pods, and transitioning from GB in
            #         description to GiB in mem_guarantee.
            #       - CPU requests are lower than the description, with a factor of
            #         10%.
            #
            - display_name: NSF NCAR CPU Notebook
              description: Start a container with the chosen specifications
              slug: ncarcpu
              default: true
              profile_options:
                requests:
                    # NOTE: Node share choices are in active development, see comment
                    #       next to profileList: above.
                    display_name: Resource Selection
                    choices:
                        mem_1:
                            default: true
                            display_name: ~1 GB, ~0.125 CPU
                            kubespawner_override:
                                mem_guarantee: 0.904G
                                cpu_guarantee: 0.013
                        mem_4:
                            display_name: ~4 GB, ~0.5 CPU
                            kubespawner_override:
                                mem_guarantee: 1.809G
                                cpu_guarantee: 0.025
                        mem_16:
                            display_name: ~16 GB, ~2.0 CPU
                            kubespawner_override:
                                mem_guarantee: 14.469G
                                cpu_guarantee: 0.5
              kubespawner_override:
                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-base:2023-12-27.01
                imagePullSecrets:
                    - harbor-registry-secret
                cpu_limit: null
                mem_limit: null
            - display_name: NSF NCAR GPU Notebooks
              slug: ncargpu
              description: Start a container with access to GPU hardware
              profile_options:
                image:
                    display_name: Image
                    choices:
                        ncartensor:
                            display_name: NCAR Tensorflow ML Notebook
                            slug: ncartensor
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-tf:2023-12-27.01
                                imagePullSecrets:
                                    - harbor-registry-secret
                        ncarpytorch:
                            display_name: NCAR Pytorch ML Notebook
                            slug: ncarpytorch
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-pyt:2023-12-27.01
                                imagePullSecrets:
                                    - harbor-registry-secret
              kubespawner_override:
                mem_limit: null
                mem_guarantee: 14G
                environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
                extra_pod_config:
                    runtimeClassName: nvidia
                extra_resource_limits:
                    nvidia.com/gpu: "1"
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 600m
            nginx.org/client-max-body-size: 10m
            nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/secure-backends: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/websocket-services: proxy-public
            nginx.org/websocket-services: proxy-public
            cert-manager.io/cluster-issuer: incommon
        ingressClassName: nginx
        # <MODS> Adjust the hosts entries in this next session.
        hosts:
            - ENC[AES256_GCM,data:DTcNey1rbC/O0j6Fm9u7W6JafiI=,iv:4rpw6xiWXKxgRZHobaDgxDaNK2zVM+l/apc4bPbxpss=,tag:SUooqgWXMZ1KzN+IbMOWeQ==,type:str]
        tls:
            - hosts:
                - ENC[AES256_GCM,data:GnnN2Y/ZN0LCOfM6AlD3AS2tEhY=,iv:o3403g+PCUAWjtxyjAQgYNvJwk7j6eb6vADzn/76iSQ=,tag:9cew1T4t0E4k66V752JFfw==,type:str]
              secretName: ENC[AES256_GCM,data:/EveMuwLqIId6p4cWRXOSbuoaA==,iv:E/66b37RHmA3RTPLQI8Mh2ybPGJ4XCFLAzErvz56Gag=,tag:DFavXU/Zlo95QhBQ9CYitw==,type:str]
              # </MODS>
dask-gateway:
    # Enabling dask-gateway will install Dask Gateway as a dependency.
    enabled: true
    # Futher Dask Gateway configuration goes here
    # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
    gateway:
        backend:
            scheduler:
                extraPodConfig: null
                #          serviceAccountName: user-sa
                #          tolerations:
                #            # Let's put schedulers on notebook nodes, since they aren't ephemeral
                #            # dask can recover from dead workers, but not dead schedulers
                #            - key: "hub.jupyter.org/dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #            - key: "hub.jupyter.org_dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #          nodeSelector:
                #            k8s.dask.org/node-purpose: scheduler
                cores:
                    request: 0.01
                    limit: 1
                memory:
                    request: 128M
                    limit: 1G
            worker:
                extraContainerConfig:
                    securityContext:
                        runAsGroup: 1000
                        runAsUser: 1000
                extraPodConfig:
                    #          serviceAccountName: user-sa
                    securityContext:
                        fsGroup: 1000
        #          tolerations:
        #            - key: "k8s.dask.org/dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #            - key: "k8s.dask.org_dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #          nodeSelector:
        #            # Dask workers get their own pre-emptible pool
        #            k8s.dask.org/node-purpose: worker
        # TODO: figure out a replacement for userLimits.
        extraConfig:
            optionHandler: |
                from dask_gateway_server.options import Options, Integer, Float, String, Mapping
                import string

                # Escape a string to be dns-safe in the same way that KubeSpawner does it.
                # Reference https://github.com/jupyterhub/kubespawner/blob/616f72c4aee26c3d2127c6af6086ec50d6cda383/kubespawner/spawner.py#L1828-L1835
                # Adapted from https://github.com/minrk/escapism to avoid installing the package
                # in the dask-gateway api pod which would have been problematic.
                def escape_string_label_safe(to_escape):
                    safe_chars = set(string.ascii_lowercase + string.digits)
                    escape_char = "-"
                    chars = []
                    for c in to_escape:
                        if c in safe_chars:
                            chars.append(c)
                        else:
                            # escape one character
                            buf = []
                            # UTF-8 uses 1 to 4 bytes per character, depending on the Unicode symbol
                            # so we need to transform each byte to its hex value
                            for byte in c.encode("utf8"):
                                buf.append(escape_char)
                                # %X is the hex value of the byte
                                buf.append('%X' % byte)
                            escaped_hex_char = "".join(buf)
                            chars.append(escaped_hex_char)
                    return u''.join(chars)

                def cluster_options(user):
                    safe_username = escape_string_label_safe(user.name)
                    def option_handler(options):
                        if ":" not in options.image:
                            raise ValueError("When specifying an image you must also provide a tag")
                        scheduler_extra_pod_annotations = {
                            "hub.jupyter.org/username": safe_username,
                            "prometheus.io/scrape": "true",
                            "prometheus.io/port": "8787",
                        }
                        extra_labels = {
                            "hub.jupyter.org/username": safe_username,
                        }
                        return {
                            "worker_cores_limit": options.worker_cores,
                            "worker_cores": options.worker_cores,
                            "worker_memory": "%fG" % options.worker_memory,
                            "image": options.image,
                            "scheduler_extra_pod_annotations": scheduler_extra_pod_annotations,
                            "scheduler_extra_pod_labels": extra_labels,
                            "worker_extra_pod_labels": extra_labels,
                            "environment": options.environment,
                        }
                    return Options(
                        Integer("worker_cores", 4, min=1, label="Worker Cores"),
                        Float("worker_memory", 8, min=1, label="Worker Memory (GiB)"),
                        # The default image is set via DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE env variable
                        String("image", label="Image"),
                        Mapping("environment", {}, label="Environment Variables"),
                        handler=option_handler,
                    )
                c.Backend.cluster_options = cluster_options
            idle: |
                # timeout after 30 minutes of inactivity
                c.KubeClusterConfig.idle_timeout = 1800
        # Users connect to the Gateway through the JupyterHub service.
        prefix: /services/dask-gateway
        auth:
            # Use JupyterHub to authenticate with Dask Gateway
            type: jupyterhub
    traefik:
        #    nodeSelector:
        #      k8s.dask.org/node-purpose: core
        service:
            # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.
            type: ClusterIP
# A placeholder as global values that can be referenced from the same location
# of any chart should be possible to provide, but aren't necessarily provided or
# used.
#global: {}
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ucetgj7k3whaqf9nulacsqarur6nrgzuyt59apeptu5cphd6ksdsqpy5he
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBHdFNpYmRnTVFFbFBYbi9M
            R0ZtODRvenVYdEpBZGtienp6ZnFmM1hRZEJJCjc1OEp0ZFcwTXNmY0w1SGFmLzBw
            OFhvK3dsRHlaRmFsUU1jUlQ2cDZuc2sKLS0tIGFweVZ1U045eGlxTFpXeVhGMGRZ
            RDZDNVlydERDQVVUcHVYRU1FL21WMEEKC2vEeQMzq9sielHqnxUTZ3G6dSTRpGCk
            +tG/7PpGjTQRFH+oZYLMCkO7pKHyRf03MOnd90fJs+VrNf+K3k6oHg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1dnkv8vy8xkl5afwuwl55ycpquy2uk7ypc5ad87sfug2zffp6jgkqwwzglr
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBiZTdCcDdVNTgrcnc1L29F
            bUt5YlhaNjY5aTVCaFh6dS9Fb0U3aVhmbWpFCmtKZVg4Wk5XUkNTRXRRdlpVWGty
            OFpkOXFvUXFvQzhWekl6bEhvbERpc28KLS0tIEllUGR6aXBhMjRCWTNiYnY0NlFt
            RytHMkRYNkdnaUdpOTE1R21tdTBZQlEKUFOU8QGGXli6w4bcMzRbZsVNlUOmzKXt
            IRbbU5hA+dAjeYPhhYgtDSgge9gpRhE8Ky/7nu2ezmdBktNZ4byz3w==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1wt75fkqsa2ngrhtmr7ws2ve8v9h2463hryj4jk4k7m5khxmc9pgqgqag8x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBCQmlQUWo1QWhzNFhnamVG
            dFZMVkdncE1MM3A3ZGQ5WUJ2Q25Cb05oZ1VjCkRDRmVJb3ZjcXFiZ2VaaGgxcWdH
            OFEwcGF6U3J4Q2lWM1p3OUZ2cFhhMGsKLS0tIFZDQnZTSVVuQmNCMHoydTZKbzdJ
            SzNsM2dhRkpDWUxWYkdVSW5BeEMydG8KDBEgEvERZa5raUVz+UEG1ztfT07aIV3L
            aveh98yl9q6C8rVHVl6agMuHiXiOyh2ocng8r1aQM96vmi74JQYelA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1fqw4znyl0zjpw5ta7ll3auxpzg8dme578jgw43a0dtzjhwjn4qlstaez7c
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA1cHFYK3Y0bVFTTW1YUUta
            SEtNSnV0RUkxQ1FNc3l4MDNmYTU0QUxFaEJrClJZR00yOWZ6T0RSMzd4OGtrYzRm
            dUROYWtLeUIzV3hIRmFMMzZQTUEwSUkKLS0tIHQ4Tm5VNDJBRGtEUkZmZGtLb3Y0
            UlRpdFpMc1IrUWxxRHIyNDdPN1h5blEKHrbypJTnJg8rYgZvjHw1QHwWS/Agdd+9
            U8geYF8UQ3l/Du6nxz6D0v1qzPZkcV965VQliJmR0uYtzPuFW224rQ==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1m2ay7zlek6d4uctt09vsw5l8gpydjlvu9xemv8pqh97urdmhhyrsh9qe86
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA5RDdmenNOMzNhNlVmT3Qy
            Q1FmVldER2t3MUJyOForNHE3a2cwMHc5aGxFCmxjcDRLV3B3N0RWbFdmYzQ4TUZ3
            QURRTVRWQ2hDeTJVcVU0UVlENStXT1UKLS0tIDJWYkdlbWxRUUJUTjR1YytrL2dQ
            Z1lJWVdZL1hxR1V0eW9iYXN5ZzliMkEK6blTCDIrZByvR3ET93N8Ub0Do+d6PESf
            5aoEeeI0QfDCH71icXdQreFNKKjiWKIvYvG+Z15Z6ZZYkY0SxqvRWg==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-01-05T18:36:11Z"
    mac: ENC[AES256_GCM,data:+w7eYefalCIzDarFJXvFIDDpsOYAgiCUGuCJ9jwJUucix3MBF6gVGtHFawOwowIvyQ5oOhYTQC8I2g686Q6bORbl3ATIosBgV15j+l2YhvgLINQ3pFdHggjhSWHT+PHQw+Z4zcahhXfxp9SjfPnc9nf8so2V0YONkaaqZ7iaZ6Y=,iv:IxNE8T/4PuTzXfX5df76R+ZBs8LQA1TR4juKLbyssik=,tag:CelzlxT2OAtmL4cihHU1Yw==,type:str]
    pgp: []
    encrypted_regex: ^(client_id|client_secret|secretToken|admin_users|oauth_callback_url|allowed_organizations|extraVolumes|extraVolumeMounts|hosts|secretName)$
    version: 3.8.1
