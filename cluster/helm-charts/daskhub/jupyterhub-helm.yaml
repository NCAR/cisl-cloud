# With a Kubernetes cluster available and HELM installed, this HELM values
# file will install JupyterHub in the Kubernetes cluster. It is also assumed
# that you have helm and kubectl installed and configured on your workstation.
# This HELM values file will require modifications which are found and 
# described by searching for 'MODS'
# Use this file as a values.yaml reference when installing the zero2jupyterhub helm chart
# following the documentation : https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html#install-jupyterhub
jupyterhub:
    hub:
        config:
            JupyterHub:
                # <MODS> You will need to configure your authentication below. Below is currently
                # a template for Github auth and you need to fill out client_id, client_secret
                # and adjust the oauth_callback_url. This info can be generated within Developer settings
                # in Github via OAuth Apps using that oauth_callback_url you define.
                # Here is a reference to other auth ways:
                # https://jupyterhub.readthedocs.io/en/stable/tutorial/getting-started/authenticators-users-basics.html
                # </MODS>
                authenticator_class: github
            GitHubOAuthenticator:
                client_id: ENC[AES256_GCM,data:KPwbPO9IZbB+9LLjylj3ZtBTUXQ=,iv:1KFsUkpRDtGIDeoA1kLvJU04Cmqn/O1PynD/1emprtc=,tag:28o3K0hK0WqmUpQbP8/ajQ==,type:str]
                client_secret: ENC[AES256_GCM,data:BJqAf6lqEsWnsNJ85aaDJ85eCpk7FMBmUL/8OdG1HM4Y/zr34r98Hw==,iv:EZVCCzVqNkriii/1uSv7ol9xl/myUECGIKKv1B0nyDI=,tag:T5iAVpWec7RDWcuxXdEzFg==,type:str]
                oauth_callback_url: ENC[AES256_GCM,data:yfY2841ZYvGeewJ9h5/z0+MJT/31xS+g0tmbeeWdmWPFIO1YJMtibKDMy8Z6HrM=,iv:iiwBbG8pII4BE6HmEZCtHeyN0sSDuSdI+hsHU1IQMEs=,tag:yiyX+YJ0MyoFvM4X3JJ2Qw==,type:str]
                allowed_organizations:
                    - ENC[AES256_GCM,data:IlOMd/BR6+G+glg+xoVdJ/SpwSl7,iv:HXXAR/k+DcblucewUL5Natv/aQHgIKKzjivRCjWbtQ4=,tag:qmtPIEQ3pg8zjkTaNh938w==,type:str]
                scope:
                    - read:org
            Authenticator:
                # <MODS> adjust the admin_users if needed. These use Github usernames </MODS>
                admin_users:
                    - ENC[AES256_GCM,data:bvqP+owrwINrebjTrQV5n+nUxYPUEeBIUZ19k5KCGw==,iv:d97heHraoitlk/H9lp09YeObAatBLwwMeqWYTNO2qoQ=,tag:UZVvMqQw1nGH4qt0so1wdw==,type:comment]
                    - ENC[AES256_GCM,data:XkCxXWrwAPvj4A==,iv:1N98gxeBuTIqm/i4MvUuRfiEPA4RjAdoTJ70Wqpkm/A=,tag:91BTOgDUM2DreH07MGdEhw==,type:str]
                    - ENC[AES256_GCM,data:55bS7Mt0x7mG/FgcfbQKwwZbrBIBMIax/wKGmOFqTrBaEAnR,iv:CnDJBMxLJFse4Twvfaxmv2hXH1bo2LVv73TeT8L4WcE=,tag:cE6h9HcxPM1q/YbVYS/b2w==,type:comment]
                    - ENC[AES256_GCM,data:YTt5M0PKGWqecjrC,iv:tC7mr90Pn+jlShrPEIHKlHCnBlh621EstSCAsg55rYA=,tag:H9zc3IdyCIIs53KRNL6yEw==,type:str]
                    - ENC[AES256_GCM,data:GKrL+eTIng2i8VYT8hKd84oHY7uG/GYY8lrObaDzT5gOGsa5s6bp7w==,iv:Sp8J3lqcxAT3mAb0yUDG7123sUphIjlPKHjSD/T0g8g=,tag:xpZ0l1ZniXHxhJhnDYKc/w==,type:comment]
                    - ENC[AES256_GCM,data:mxDk/2Ary1ZA,iv:fKBq7/r2AzjDAeSxrEKnpzmZD1CknBtyJD2I+I97Ph4=,tag:tB2ICT99Tc9tgp1tOYB1Aw==,type:str]
                    - ENC[AES256_GCM,data:T0fUwh8xba/cTQ3YfTmtSvfeDxCnKHdxSLw42Pu1RWrPgg==,iv:F4rPt0oGMuoXb4H1QuVdgBNhHEsuhmH5/W5UvVOPRXo=,tag:gN/aUuLCDdxkLqhCFaOCug==,type:comment]
                    - ENC[AES256_GCM,data:nVnO2enLApAVGGA+/+Q=,iv:iIvbb1acuA/69R85Y4fVm2nueN+maogesx3gQrnvcYs=,tag:nb12shsuyz43Fu4Runq/6Q==,type:str]
        networkPolicy:
            egress:
                - ports:
                    - port: 6443
                - to:
                    - podSelector:
                        matchLabels:
                            app.kubernetes.io/name: dask-gateway
                  ports:
                    - port: 8000
    proxy:
        # <MODS> Make sure you fill in a secretToken. Run: 'openssl rand -hex 32'
        # on your local workstation to get that value. </MODS>
        secretToken: ENC[AES256_GCM,data:MQlNo1aBgNG9qhlR/1ehs9vajoe/9ZytQWaq2ENJr8KVI5r1v5JkM4gHE++CpZhPlVDAOaz9BANJ9lSgZp2vAw==,iv:gy0BO6fUzBIf57BDhLI9ODNfia510qGUM1tdMn9qydY=,tag:ctnWkUcIdcdli6QlHETjZA==,type:str]
        service:
            type: ClusterIP
        chp:
            networkPolicy:
                egress:
                    - to:
                        - podSelector:
                            matchLabels:
                                app.kubernetes.io/name: dask-gateway
                      ports:
                        - port: 8000
    singleuser:
        networkPolicy:
            egress:
                - to:
                    - podSelector:
                        matchLabels:
                            app.kubernetes.io/name: dask-gateway
                  ports:
                    - port: 8000
        extraEnv:
            # About DASK_ prefixed variables we set:
            #
            # 1. k8s native variable expansion is applied with $(MY_ENV) syntax. The
            #    order variables are defined matters though and we are under the
            #    mercy of how KubeSpawner renders our passed dictionaries.
            #
            # 2. Dask loads local YAML config.
            #
            # 3. Dask loads environment variables prefixed DASK_.
            #    - DASK_ is stripped
            #    - Capitalization is ignored
            #    - Double underscore means a nested configuration
            #    - `ast.literal_eval` is used to parse values
            #
            # 4. dask-gateway and dask-distributed looks at its config and expands
            #    expressions in {} again, sometimes only with the environment
            #    variables as context but sometimes also with additional variables.
            #
            # References:
            # - K8s expansion:     https://kubernetes.io/docs/tasks/inject-data-application/define-interdependent-environment-variables/
            # - KubeSpawner issue: https://github.com/jupyterhub/kubespawner/issues/491
            # - Dask config:       https://docs.dask.org/en/latest/configuration.html
            # - Exploration issue: https://github.com/2i2c-org/infrastructure/issues/442
            #
            # DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE makes the default worker image
            # match the singleuser image.
            DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: '{{JUPYTER_IMAGE_SPEC}}'
            # DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT makes some environment
            # variables be copied over to the worker nodes from the user nodes.
            DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT: '{{"SCRATCH_BUCKET": "$(SCRATCH_BUCKET)", "PANGEO_SCRATCH": "$(PANGEO_SCRATCH)"}}'
            # DASK_DISTRIBUTED__DASHBOARD__LINK makes the suggested link to the
            # dashboard account for the /user/<username>/<server-name> prefix in the path.
            # JUPYTERHUB_SERVICE_PREFIX has leading and trailing slashes as appropriate
            DASK_DISTRIBUTED__DASHBOARD__LINK: '{{JUPYTERHUB_SERVICE_PREFIX}}proxy/{{port}}/status'
        storage:
            extraVolumes:
                - name: ENC[AES256_GCM,data:BMo2VQl5Q1mM8w==,iv:4FYRuZG77IpbJKphkGOqFbrO+BgeTt4zI+GxNvWuJBY=,tag:4lgc5x1oy4uyXIrHwiJ/YA==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:hZPLj9nrljLlHI0/FGe/vmFp5uUmcQ==,iv:tZQAdErrjODIluxigYmfV/SJodezf+nSqdXP8wRvk98=,tag:MAcK1rb9L5yS21WzdtoskQ==,type:str]
                    path: ENC[AES256_GCM,data:bu4En5coRlZ8G+BWmwEuens4/XkyWtEebVZmRXiGfw==,iv:PPbTYR5UoYTyn3/VtvTxXQeCwRrEkdsCbow22XcSa7M=,tag:6jaUMP28MA0j1fEMMF947Q==,type:str]
                - name: ENC[AES256_GCM,data:sD47OI0LnV4=,iv:wx9DK471fYTbOT11UI/kHBuCyqXVOz7KmeJyDNs5yXE=,tag:MytQJvcc0EE0WUm6Pglgog==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:1tyBqEQ/UEX5lA6HICoTqOU=,iv:yQx1Y/ipF45hrEF2CWd9PMFhv9ymXyyDWo0zyRQDbKM=,tag:FK0sUCWIntaXB24wqUomtw==,type:str]
                    path: ENC[AES256_GCM,data:UljhFiRPHD3sUPc=,iv:0mqTb37UOA/ZGxMiWX3fvL2Cdscn+dv8AhEPnhFx+QA=,tag:/YrLip4UAhJ8raNNcQpCTg==,type:str]
            extraVolumeMounts:
                - name: ENC[AES256_GCM,data:xnlo2JAiNMjeJA==,iv:ykgJ4EMnPksUut3QAzJucva7Gd0sTlcvVOLWM0RYqG4=,tag:d6msfQ6vtE4k0j1ViJDdVg==,type:str]
                  mountPath: ENC[AES256_GCM,data:cb8+tM1LFIRSvPfi0SGEE5rVfg==,iv:xfklzV1jvfOxahYQN2yFRCblYabf7yRbjPUF3izyUKg=,tag:wRmB1uwJaYA5tQ33oAGPbQ==,type:str]
                  readOnly: ENC[AES256_GCM,data:Dw7NcQ==,iv:nxJnTctuA7LHQqPvU7tCcpyi2R7YMHNRJ6iVTKqwfgg=,tag:bm78KiBh5U3Pn+qQLL2PIg==,type:bool]
                - name: ENC[AES256_GCM,data:TjGA/CjC4cA=,iv:coPh9oXpE87+BF1seZC7dtuKZ2ue8mKIMXfT9D0Preg=,tag:PW3xwJPUh5PTLQ0jBhuGww==,type:str]
                  mountPath: ENC[AES256_GCM,data:2n/wpwKrQj2rIyxFdL3z,iv:O1ylwEW8pgt1ySGzOhSW+X1g9S0RLqzeVY4SbW3mPgw=,tag:birbwuoZX0/BIEfAhwDJng==,type:str]
                  readOnly: ENC[AES256_GCM,data:qaU8Iw==,iv:W6aoAp3vMEl44UAnnrF/7cGrhWiIeXsDJR0xuuMY2QQ=,tag:EEwfmol6EeQ95FSV3gh58Q==,type:bool]
        image:
            # image choice preliminary and is expected to be setup via
            # https://ncar-cisl.2i2c.cloud/services/configurator/ by the community
            #
            # pangeo/pangeo-notebook is maintained at: https://github.com/pangeo-data/pangeo-docker-images
            name: pangeo/pangeo-notebook
            tag: 2024.01.15
        profileList:
            # NOTE: About node sharing
            #
            #       CPU/Memory requests/limits are actively considered still. This
            #       profile list is setup to involve node sharing as considered in
            #       https://github.com/2i2c-org/infrastructure/issues/2121.
            #
            #       - Memory requests are different from the description, based on:
            #         whats found to remain allocate in k8s, subtracting 1GiB
            #         overhead for misc system pods, and transitioning from GB in
            #         description to GiB in mem_guarantee.
            #       - CPU requests are lower than the description, with a factor of
            #         10%.
            #
            - display_name: NSF NCAR CPU Notebook
              description: Start a container with the chosen specifications
              slug: ncarcpu
              default: true
              profile_options:
                requests:
                    # NOTE: Node share choices are in active development, see comment
                    #       next to profileList: above.
                    display_name: Resource Selection
                    choices:
                        mem_1:
                            default: true
                            display_name: ~1 GB, ~0.125 CPU
                            kubespawner_override:
                                mem_guarantee: 0.904G
                                cpu_guarantee: 0.013
                        mem_4:
                            display_name: ~4 GB, ~0.5 CPU
                            kubespawner_override:
                                mem_guarantee: 1.809G
                                cpu_guarantee: 0.025
                        mem_16:
                            display_name: ~16 GB, ~2.0 CPU
                            kubespawner_override:
                                mem_guarantee: 14.469G
                                cpu_guarantee: 0.5
              kubespawner_override:
                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-base:2024-02-05.19
                #imagePullSecrets:
                #    - harbor-registry-secret
                cpu_limit: null
                mem_limit: null
            - display_name: NSF NCAR GPU Notebooks
              slug: ncargpu
              description: Start a container with access to GPU hardware
              profile_options:
                image:
                    display_name: Image
                    choices:
                        ncartensor:
                            display_name: NCAR Tensorflow ML Notebook
                            slug: ncartensor
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-tf:2024-02-06.17
                                #imagePullSecrets:
                                #    - harbor-registry-secret
                        ncarpytorch:
                            display_name: NCAR Pytorch ML Notebook
                            slug: ncarpytorch
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-pyt:2023-12-27.01
                                #imagePullSecrets:
                                #    - harbor-registry-secret
              kubespawner_override:
                mem_limit: null
                mem_guarantee: 14G
                environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
                extra_pod_config:
                    runtimeClassName: nvidia
                extra_resource_limits:
                    nvidia.com/gpu: "1"
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 600m
            nginx.org/client-max-body-size: 10m
            nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/secure-backends: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/websocket-services: proxy-public
            nginx.org/websocket-services: proxy-public
            cert-manager.io/cluster-issuer: incommon
        ingressClassName: nginx
        # <MODS> Adjust the hosts entries in this next session.
        hosts:
            - ENC[AES256_GCM,data:F4nzkuUFEVZ8kqdNfxRIoZUHHrg=,iv:MBdcXSpJRiXnnfnStvNybNNmzxelzxqBrlC+m4EDdxs=,tag:jLe0mOsAis+1Iwl2c3nxxw==,type:str]
        tls:
            - hosts:
                - ENC[AES256_GCM,data:uYd9brBKjdTVeBuCpE8wN9q2ROI=,iv:p0Mh3zPQtXSjhLRsyzuGCIG58P7bJn9ADvM3TK7XW84=,tag:fruPZPZjQ7Q1cNfN8lxlYA==,type:str]
              secretName: ENC[AES256_GCM,data:XxT57ejFIu080p6ib/lJIDgosQ==,iv:wnGdxZZ67BubNuuMzTXqu47rajK2ynO7RQMhVKz84uo=,tag:DMj6RyU8IDWsm7efoT8ZOA==,type:str]
              # </MODS>
dask-gateway:
    # Enabling dask-gateway will install Dask Gateway as a dependency.
    enabled: true
    # Futher Dask Gateway configuration goes here
    # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
    gateway:
        backend:
            scheduler:
                extraPodConfig: null
                #          serviceAccountName: user-sa
                #          tolerations:
                #            # Let's put schedulers on notebook nodes, since they aren't ephemeral
                #            # dask can recover from dead workers, but not dead schedulers
                #            - key: "hub.jupyter.org/dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #            - key: "hub.jupyter.org_dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #          nodeSelector:
                #            k8s.dask.org/node-purpose: scheduler
                cores:
                    request: 0.01
                    limit: 1
                memory:
                    request: 128M
                    limit: 1G
            worker:
                extraContainerConfig:
                    securityContext:
                        runAsGroup: 1000
                        runAsUser: 1000
                extraPodConfig:
                    #          serviceAccountName: user-sa
                    securityContext:
                        fsGroup: 1000
        #          tolerations:
        #            - key: "k8s.dask.org/dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #            - key: "k8s.dask.org_dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #          nodeSelector:
        #            # Dask workers get their own pre-emptible pool
        #            k8s.dask.org/node-purpose: worker
        # TODO: figure out a replacement for userLimits.
        extraConfig:
            optionHandler: |
                from dask_gateway_server.options import Options, Integer, Float, String, Mapping
                import string

                # Escape a string to be dns-safe in the same way that KubeSpawner does it.
                # Reference https://github.com/jupyterhub/kubespawner/blob/616f72c4aee26c3d2127c6af6086ec50d6cda383/kubespawner/spawner.py#L1828-L1835
                # Adapted from https://github.com/minrk/escapism to avoid installing the package
                # in the dask-gateway api pod which would have been problematic.
                def escape_string_label_safe(to_escape):
                    safe_chars = set(string.ascii_lowercase + string.digits)
                    escape_char = "-"
                    chars = []
                    for c in to_escape:
                        if c in safe_chars:
                            chars.append(c)
                        else:
                            # escape one character
                            buf = []
                            # UTF-8 uses 1 to 4 bytes per character, depending on the Unicode symbol
                            # so we need to transform each byte to its hex value
                            for byte in c.encode("utf8"):
                                buf.append(escape_char)
                                # %X is the hex value of the byte
                                buf.append('%X' % byte)
                            escaped_hex_char = "".join(buf)
                            chars.append(escaped_hex_char)
                    return u''.join(chars)

                def cluster_options(user):
                    safe_username = escape_string_label_safe(user.name)
                    def option_handler(options):
                        if ":" not in options.image:
                            raise ValueError("When specifying an image you must also provide a tag")
                        scheduler_extra_pod_annotations = {
                            "hub.jupyter.org/username": safe_username,
                            "prometheus.io/scrape": "true",
                            "prometheus.io/port": "8787",
                        }
                        extra_labels = {
                            "hub.jupyter.org/username": safe_username,
                        }
                        return {
                            "worker_cores_limit": options.worker_cores,
                            "worker_cores": options.worker_cores,
                            "worker_memory": "%fG" % options.worker_memory,
                            "image": options.image,
                            "scheduler_extra_pod_annotations": scheduler_extra_pod_annotations,
                            "scheduler_extra_pod_labels": extra_labels,
                            "worker_extra_pod_labels": extra_labels,
                            "environment": options.environment,
                        }
                    return Options(
                        Integer("worker_cores", 4, min=1, label="Worker Cores"),
                        Float("worker_memory", 8, min=1, label="Worker Memory (GiB)"),
                        # The default image is set via DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE env variable
                        String("image", label="Image"),
                        Mapping("environment", {}, label="Environment Variables"),
                        handler=option_handler,
                    )
                c.Backend.cluster_options = cluster_options
            idle: |
                # timeout after 30 minutes of inactivity
                c.KubeClusterConfig.idle_timeout = 1800
        # Users connect to the Gateway through the JupyterHub service.
        prefix: /services/dask-gateway
        auth:
            # Use JupyterHub to authenticate with Dask Gateway
            type: jupyterhub
    traefik:
        #    nodeSelector:
        #      k8s.dask.org/node-purpose: core
        service:
            # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.
            type: ClusterIP
# A placeholder as global values that can be referenced from the same location
# of any chart should be possible to provide, but aren't necessarily provided or
# used.
#global: {}
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ucetgj7k3whaqf9nulacsqarur6nrgzuyt59apeptu5cphd6ksdsqpy5he
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBKYTZDOUNpaWtiVTRrb2oy
            bWttMDBFVVpYOFJwZGwvS25sREtsUzhzam1ZCllQNFZMVGNxWmIzN0c5eDBnZWZG
            RGZjRmFhQVNnTm1LcXNta1VQSUZEczgKLS0tIGw1V3RQVWZFRSt4Y01mM2hsZlpj
            VEVvSTdRTWhPTDc2YTMvUzV4MXNwQjQKyLgyUl+6oqH9jfrLUjipK1pVTft5UHvx
            YpIwPqB0lSmcz520Ob3C16/m8AouC2v28FpZmVPQaYbkZLxDxAqPgA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1dnkv8vy8xkl5afwuwl55ycpquy2uk7ypc5ad87sfug2zffp6jgkqwwzglr
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBxQUZJWHJ3c2NhS2dGK0RG
            Q3hGMEVZcklWS0d6bDhiRVY5T0hhb1pmMzIwCno1Tmx2NEplRU1xMmNOL0twbFor
            K2JMQ1o2bTQzQmNOTjJHSjl3MThQd3cKLS0tIFhSaVFRa1hvOHVNU0crTGRVck5s
            bjIxZU5zMDc4dFpHdlhkdzk1WW92R2cKDFh//TYR1xeH/q23aQvG/puvDCXXTcmu
            guDH3rAfVnJYsbQBzz5/9y53qg43gjDO3PWWxm50VSQVgs1Q3u5pkA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1wt75fkqsa2ngrhtmr7ws2ve8v9h2463hryj4jk4k7m5khxmc9pgqgqag8x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBLTzdnKy9jc1g3UmtKZWND
            SjByTWp5b2JpVC94ekJMN25tN1owV3hiWFJVCnVKNDRXUXZEVGNVdDVYRDZTcnRX
            b3A5bVh0b2R4TW1yR1Vqd05ZbmRsbVkKLS0tIEFKVmlNNzIrYUR5clBqNGtJVXBh
            VytSdWhmT2F0UzFiNTFOTHV5NzhENkkK9ClrMbwe04sP+FSHRYfzPRRcuUE29YY4
            7QSICeOOLTsmQmHehQ3FQyqy8UKUBZ1QI3RmsKkkvHzVXVvUoMwCZw==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1fqw4znyl0zjpw5ta7ll3auxpzg8dme578jgw43a0dtzjhwjn4qlstaez7c
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBadGJFUFVmL09yQUtGNzZ2
            OStJZ1U3V0RaMkx6ZzY1OHBOZ2tjWGlSYWpzCjFTL1orT1VIN2NKTGZ2czJiRWpl
            ZGNhOXFFZ01HNXNLcUYzOHliSGYzSEEKLS0tIEx6ZE1XVG11dDE2ck5yYXBRZTg2
            c2dFT3YwM1Qwa2ZwYi9YeEczaDZhNHMKIVGn4Sy+pyiHNi1FarZTN/Cw25vK2KfB
            0FKyyMiX4RdxcDsSQMknFqKsACcRDmHR7YP3xaicWZLW6dglxuGJTg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1m2ay7zlek6d4uctt09vsw5l8gpydjlvu9xemv8pqh97urdmhhyrsh9qe86
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB0eThRWm1COVU1blAxZVU3
            NFJUa2FCdE9MNGQvVDFJeUVmMktQczZtN1RFCjd2c3hXcUNKeEo1S3M3NHZ0Q2g0
            NGROWlIvYUJNM1BjNE11S1FmNlNBRkUKLS0tIFdPbjlFcjFCZnRzWkJqQll5OCsy
            MUY2T1pxZkI0K0xGc2NkM0x6Yk43eWsKNSbBhulSv22vVHI0sjG1yt4LUtmIa5Vl
            qL10f/b3NP+7yFb44Ac/IBTBsDFR2zfVsEdJfBIg0mxth6fzJgQhFQ==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-03-21T19:46:29Z"
    mac: ENC[AES256_GCM,data:eB6Rv+Us1BRZi4JOKQq31xY5YPfLJW6yJ3a6UhvfvexfqbyGeBktOzXdGjY0q5W0vcpkcFRxs24i5ei2Q475Wx2h418ZRzTFwuZCijpiorgEX12rg7fWW4nTbXTSkHMzz2C/bPWITkAvlA4j4wp9DQE30rhAO11gg5Fm1dePj0Y=,iv:NwZEkgWB/TBAX2G6lJTz+zrQNjgySDjFUvEgTyvusmo=,tag:QnEDvE9dpjb/XNyzuKqHaQ==,type:str]
    pgp: []
    encrypted_regex: ^(client_id|client_secret|secretToken|admin_users|oauth_callback_url|allowed_organizations|extraVolumes|extraVolumeMounts|hosts|secretName)$
    version: 3.8.1
